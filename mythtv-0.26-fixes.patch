 mythtv/libs/libmythbase/logging.cpp               | 2 +-
 mythtv/libs/libmythbase/mythcommandlineparser.cpp | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/mythtv/libs/libmythbase/logging.cpp b/mythtv/libs/libmythbase/logging.cpp
index d48a3a2..da1677c 100644
--- a/mythtv/libs/libmythbase/logging.cpp
+++ b/mythtv/libs/libmythbase/logging.cpp
@@ -791,7 +791,7 @@ void logPropagateCalc(void)
         logPropagateArgs += " --quiet";
 
     if (!logPropagateOpts.dblog)
-        logPropagateArgs += " --nodblog";
+        logPropagateArgs += " --enable-dblog";
 
 #ifndef _WIN32
     if (logPropagateOpts.facility >= 0)
diff --git a/mythtv/libs/libmythbase/mythcommandlineparser.cpp b/mythtv/libs/libmythbase/mythcommandlineparser.cpp
index 3bbac88..ad7b3ce 100644
--- a/mythtv/libs/libmythbase/mythcommandlineparser.cpp
+++ b/mythtv/libs/libmythbase/mythcommandlineparser.cpp
@@ -2333,7 +2333,7 @@ void MythCommandLineParser::addUPnP(void)
 
 /** \brief Canned argument definition for all logging options, including
  *  --verbose, --logpath, --quiet, --loglevel, --syslog
- *  and --nodblog
+ *  and --enable-dblog
  */
 void MythCommandLineParser::addLogging(
     const QString &defaultVerbosity, LogLevel_t defaultLogLevel)
@@ -2375,7 +2375,7 @@ void MythCommandLineParser::addLogging(
         "Set the syslog logging facility.\nSet to \"none\" to disable, "
         "defaults to none.", "")
                 ->SetGroup("Logging");
-    add("--nodblog", "nodblog", false, "Disable database logging.", "")
+    add("--enable-dblog", "enabledblog", false, "Enable logging to database.", "")
                 ->SetGroup("Logging");
 
     add(QStringList( QStringList() << "-l" << "--logfile" ),
@@ -2534,7 +2534,7 @@ int MythCommandLineParser::ConfigureLogging(QString mask, unsigned int progress)
     }
 
     int facility = GetSyslogFacility();
-    bool dblog = !toBool("nodblog");
+    bool dblog = toBool("enabledblog");
     LogLevel_t level = GetLogLevel();
     if (level == LOG_UNKNOWN)
         return GENERIC_EXIT_INVALID_CMDLINE;
