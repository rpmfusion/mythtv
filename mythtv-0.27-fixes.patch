 mythplugins/configure                              |  10 +-
 mythplugins/mythmusic/mythmusic/musicplayer.cpp    |   2 +-
 mythtv/bindings/python/MythTV/methodheap.py        |   2 +-
 mythtv/configure                                   |  11 +-
 mythtv/libs/libmyth/programtypes.cpp               |   1 +
 mythtv/libs/libmythbase/mythdownloadmanager.cpp    |  26 +-
 mythtv/libs/libmythbase/mythversion.h              |   2 +-
 mythtv/libs/libmythbase/serverpool.cpp             |   3 +-
 mythtv/libs/libmythmetadata/metadatafactory.cpp    |   8 +-
 mythtv/libs/libmythtv/avformatdecoder.cpp          |  18 +-
 mythtv/libs/libmythtv/avformatdecoder.h            |   2 +-
 mythtv/libs/libmythtv/cc608decoder.cpp             |   4 +-
 .../channelscan/channelscanmiscsettings.h          |   2 +
 mythtv/libs/libmythtv/datadirect.cpp               |  56 ++-
 mythtv/libs/libmythtv/datadirect.h                 |   2 +
 mythtv/libs/libmythtv/eitcache.cpp                 |  15 +-
 mythtv/libs/libmythtv/eitcache.h                   |   2 +-
 mythtv/libs/libmythtv/eithelper.cpp                |  40 +-
 mythtv/libs/libmythtv/jobqueue.cpp                 |  26 +-
 mythtv/libs/libmythtv/jobqueue.h                   |   2 +
 mythtv/libs/libmythtv/mhegic.cpp                   |   9 +-
 mythtv/libs/libmythtv/mpeg/dvbdescriptors.h        |  50 ++-
 mythtv/libs/libmythtv/mpeg/mpegdescriptors.h       |  16 +
 mythtv/libs/libmythtv/mpeg/mpegstreamdata.cpp      |  14 +-
 mythtv/libs/libmythtv/mythplayer.cpp               |  12 +-
 mythtv/libs/libmythtv/mythplayer.h                 |   2 +
 mythtv/libs/libmythtv/openglvideo.cpp              |  19 +-
 .../libmythtv/recorders/NuppelVideoRecorder.cpp    |   4 +
 mythtv/libs/libmythtv/recorders/dtvrecorder.cpp    |  13 +-
 mythtv/libs/libmythtv/subtitlescreen.cpp           |   7 -
 .../test/test_mpegtables/test_mpegtables.h         |  52 +++
 .../test/test_mpegtables/test_mpegtables.pro       |   4 +
 mythtv/libs/libmythtv/transporteditor.cpp          |   2 +
 mythtv/libs/libmythtv/tv_play.cpp                  |  14 +
 mythtv/libs/libmythtv/videosource.cpp              |   1 +
 mythtv/libs/libmythui/mythuibuttonlist.cpp         |  28 +-
 mythtv/libs/libmythui/mythuibuttonlist.h           |   4 +
 mythtv/libs/libmythui/mythuiimage.cpp              | 122 +++---
 mythtv/libs/libmythui/mythuiimage.h                |   5 +
 mythtv/libs/libmythui/mythuitext.cpp               |   2 +-
 mythtv/libs/libmythupnp/msocketdevice.h            |   4 +-
 mythtv/libs/libmythupnp/msocketdevice_unix.cpp     |  27 +-
 mythtv/libs/libmythupnp/ssdp.cpp                   |  28 +-
 mythtv/locales/de_at.xml                           |  37 ++
 mythtv/programs/mythbackend/mainserver.cpp         |   3 +
 mythtv/programs/mythfilldatabase/xmltvparser.cpp   |  19 +-
 mythtv/programs/mythfrontend/globalsettings.cpp    |  13 +
 mythtv/programs/mythfrontend/networkcontrol.cpp    |   1 +
 mythtv/programs/mythfrontend/playbackbox.cpp       |  68 +++-
 mythtv/programs/mythfrontend/playbackbox.h         |  27 ++
 .../programs/mythfrontend/programrecpriority.cpp   |  69 ++--
 mythtv/programs/mythfrontend/themechooser.cpp      |  12 +-
 mythtv/programs/mythtranscode/transcode.cpp        |   2 +-
 mythtv/programs/mythtv-setup/importicons.cpp       |   6 +-
 mythtv/programs/mythwelcome/welcomedialog.cpp      |   2 +-
 mythtv/themes/default/keyboard/el.xml              | 270 ++++++++++++++
 mythtv/themes/default/keyboard/el_ui.xml           | 410 +++++++++++++++++++++
 57 files changed, 1398 insertions(+), 214 deletions(-)

diff --git a/mythplugins/configure b/mythplugins/configure
index b9086ba..f14a405 100755
--- a/mythplugins/configure
+++ b/mythplugins/configure
@@ -561,14 +561,14 @@ OPENGLV=$(cat mythconfig.mak | grep -e "^CONFIG_OPENGL_VIDEO=yes")
 EXTRALIBS=$(cat mythconfig.mak | grep -e "^EXTRALIBS=")
 EXTRALIBS=${EXTRALIBS#EXTRALIBS=}
 
-if is_qmake5 $qmake || is_qmake5 qmake-qt5; then
-    if is_qmake5 qmake-qt5; then
-        qmake=qmake-qt5
-    fi
-elif is_qmake4 $qmake || is_qmake4 qmake-qt4; then
+if is_qmake4 $qmake || is_qmake4 qmake-qt4; then
     if is_qmake4 qmake-qt4; then
         qmake=qmake-qt4
     fi
+elif is_qmake5 $qmake || is_qmake5 qmake-qt5; then
+    if is_qmake5 qmake-qt5; then
+        qmake=qmake-qt5
+    fi
 else
     die "qmake for Qt4.8 or newer not found.\nPlease specify the correct qmake with --qmake="
 fi
diff --git a/mythplugins/mythmusic/mythmusic/musicplayer.cpp b/mythplugins/mythmusic/mythmusic/musicplayer.cpp
index 867c765..713408d 100644
--- a/mythplugins/mythmusic/mythmusic/musicplayer.cpp
+++ b/mythplugins/mythmusic/mythmusic/musicplayer.cpp
@@ -504,7 +504,7 @@ void MusicPlayer::nextAuto(void)
     }
 
     // if we don't already have a gui attached show the miniplayer if configured to do so
-    if (m_isAutoplay && m_canShowPlayer && m_autoShowPlayer)
+    if (m_isAutoplay && m_canShowPlayer && m_autoShowPlayer && m_isPlaying)
     {
         MythScreenStack *popupStack =
                             GetMythMainWindow()->GetStack("popup stack");
diff --git a/mythtv/bindings/python/MythTV/methodheap.py b/mythtv/bindings/python/MythTV/methodheap.py
index d598b2f..b41b2da 100644
--- a/mythtv/bindings/python/MythTV/methodheap.py
+++ b/mythtv/bindings/python/MythTV/methodheap.py
@@ -1202,7 +1202,7 @@ class MythXML( XMLConnection ):
         if height: args['Height'] = height
         if secsin: args['SecsIn'] = secsin
 
-        return self._result('Content/GetPreviewImage', **args).read()
+        return self._request('Content/GetPreviewImage', **args).read()
 
 class MythMusic( MusicSchema, DBCache ):
     """
diff --git a/mythtv/configure b/mythtv/configure
index f8c1f2f..d95a3a3 100755
--- a/mythtv/configure
+++ b/mythtv/configure
@@ -4250,6 +4250,7 @@ case $target_os in
         ! disabled joystick_menu && enable joystick_menu
         enable libudev
         enable libuuid
+        enable pic
         ;;
     irix*)
         target_os=irix
@@ -4467,15 +4468,15 @@ is_qmake4(){
     $1 --version 2>&1 | egrep -q -e "Qt version 4\.[8-9]\.[0-9]"
 }
 
-if is_qmake5 $qmake || is_qmake5 qmake-qt5; then
+if is_qmake4 $qmake || is_qmake4 qmake-qt4; then
+    if is_qmake4 qmake-qt4; then
+        qmake=qmake-qt4
+    fi
+elif is_qmake5 $qmake || is_qmake5 qmake-qt5; then
     if is_qmake5 qmake-qt5; then
         qmake=qmake-qt5
     fi
     check_cxxflags -DQT_DISABLE_DEPRECATED_BEFORE
-elif is_qmake4 $qmake || is_qmake4 qmake-qt4; then
-    if is_qmake4 qmake-qt4; then
-        qmake=qmake-qt4
-    fi
 else
     die "qmake for Qt4.8 or newer not found.\nPlease specify the correct qmake with --qmake="
 fi
diff --git a/mythtv/libs/libmyth/programtypes.cpp b/mythtv/libs/libmyth/programtypes.cpp
index 3167e81..c1253c5 100644
--- a/mythtv/libs/libmyth/programtypes.cpp
+++ b/mythtv/libs/libmyth/programtypes.cpp
@@ -2,6 +2,7 @@
 
 #include <QDateTime>
 #include <QMutex>
+#include <QObject>
 
 #include "programtypes.h"
 #include "mythdate.h"
diff --git a/mythtv/libs/libmythbase/mythdownloadmanager.cpp b/mythtv/libs/libmythbase/mythdownloadmanager.cpp
index 02d27a0..dbf061f 100644
--- a/mythtv/libs/libmythbase/mythdownloadmanager.cpp
+++ b/mythtv/libs/libmythbase/mythdownloadmanager.cpp
@@ -11,6 +11,7 @@
 #include <QTextStream>
 #include <QNetworkProxy>
 #include <QMutexLocker>
+#include <QUrl>
 
 #include "stdlib.h"
 
@@ -27,7 +28,6 @@
 
 #include "mythdownloadmanager.h"
 #include "mythlogging.h"
-#include <QUrl>
 
 using namespace std;
 
@@ -276,6 +276,8 @@ void MythDownloadManager::run(void)
             updateCookieJar();
         }
         m_infoLock->lock();
+        LOG(VB_FILE, LOG_DEBUG, LOC + QString("items downloading %1").arg(m_downloadInfos.count()));
+        LOG(VB_FILE, LOG_DEBUG, LOC + QString("items queued %1").arg(m_downloadQueue.count()));
         downloading = !m_downloadInfos.isEmpty();
         itemsInCancellationQueue = !m_cancellationQueue.isEmpty();
         m_infoLock->unlock();
@@ -297,9 +299,15 @@ void MythDownloadManager::run(void)
             m_queueWaitLock.lock();
 
             if (downloading)
+            {
+                LOG(VB_FILE, LOG_DEBUG, LOC + QString("waiting 200ms"));
                 m_queueWaitCond.wait(&m_queueWaitLock, 200);
+            }
             else
+            {
+                LOG(VB_FILE, LOG_DEBUG, LOC + QString("waiting for more items to download"));
                 m_queueWaitCond.wait(&m_queueWaitLock);
+            }
 
             m_queueWaitLock.unlock();
         }
@@ -312,10 +320,12 @@ void MythDownloadManager::run(void)
             m_downloadQueue.pop_front();
 
             if (!dlInfo)
+            {
+                m_infoLock->unlock();
                 continue;
+            }
 
-            QUrl qurl(dlInfo->m_url);
-            if (m_downloadInfos.contains(qurl.toString()))
+            if (m_downloadInfos.contains(dlInfo->m_url))
             {
                 // Push request to the end of the queue to let others process.
                 // If this is the only item in the queue, force the loop to
@@ -335,7 +345,7 @@ void MythDownloadManager::run(void)
                 downloadQNetworkRequest(dlInfo);
             }
 
-            m_downloadInfos[qurl.toString()] = dlInfo;
+            m_downloadInfos[dlInfo->m_url] = dlInfo;
         }
         m_infoLock->unlock();
     }
@@ -1210,9 +1220,15 @@ void MythDownloadManager::downloadFinished(MythDownloadInfo *dlInfo)
         // else we downloaded via QNetworkAccessManager
         // AND the caller is handling the reply
 
-        m_downloadInfos.remove(dlInfo->m_url);
+        m_infoLock->lock();
+        if (!m_downloadInfos.remove(dlInfo->m_url))
+            LOG(VB_GENERAL, LOG_ERR, LOC +
+                QString("ERROR download finished but failed to remove url: %1")
+                        .arg(dlInfo->m_url));
+
         if (reply)
             m_downloadReplies.remove(reply);
+        m_infoLock->unlock();
 
         dlInfo->SetDone(true);
 
diff --git a/mythtv/libs/libmythbase/mythversion.h b/mythtv/libs/libmythbase/mythversion.h
index b097b21..26d37ff 100644
--- a/mythtv/libs/libmythbase/mythversion.h
+++ b/mythtv/libs/libmythbase/mythversion.h
@@ -12,7 +12,7 @@
 /// Update this whenever the plug-in ABI changes.
 /// Including changes in the libmythbase, libmyth, libmythtv, libmythav* and
 /// libmythui class methods in exported headers.
-#define MYTH_BINARY_VERSION "0.27.20140719-1"
+#define MYTH_BINARY_VERSION "0.27.20141016-1"
 
 /** \brief Increment this whenever the MythTV network protocol changes.
  *
diff --git a/mythtv/libs/libmythbase/serverpool.cpp b/mythtv/libs/libmythbase/serverpool.cpp
index 11694b3..e13c331 100644
--- a/mythtv/libs/libmythbase/serverpool.cpp
+++ b/mythtv/libs/libmythbase/serverpool.cpp
@@ -417,7 +417,8 @@ bool ServerPool::listen(QList<QHostAddress> addrs, quint16 port,
             server->disconnect();
             server->deleteLater();
 
-            if (server->serverError() == QAbstractSocket::HostNotFoundError)
+            if (server->serverError() == QAbstractSocket::HostNotFoundError ||
+                server->serverError() == QAbstractSocket::SocketAddressNotAvailableError)
             {
                 LOG(VB_GENERAL, LOG_ERR,
                     QString("Address %1 no longer exists - ignoring")
diff --git a/mythtv/libs/libmythmetadata/metadatafactory.cpp b/mythtv/libs/libmythmetadata/metadatafactory.cpp
index 5c66bef..bc385d8 100644
--- a/mythtv/libs/libmythmetadata/metadatafactory.cpp
+++ b/mythtv/libs/libmythmetadata/metadatafactory.cpp
@@ -290,12 +290,10 @@ void MetadataFactory::OnSingleResult(MetadataLookup *lookup)
         if (fanartlist.size())
         {
             ArtworkInfo info;
-            int index = fanartlist.size();
+            int index = 0;
             int season = lookup->GetIsCollection() ? 0 : (int)lookup->GetSeason();
-            if (season > 0)
-                index = max(0, index-season);
-            else
-                index--;
+            if (season > 0 && season <= fanartlist.count())
+                index = season - 1;
             info.url = fanartlist.takeAt(index).url;
             map.insert(kArtworkFanart, info);
         }
diff --git a/mythtv/libs/libmythtv/avformatdecoder.cpp b/mythtv/libs/libmythtv/avformatdecoder.cpp
index 8507d6b..e35e675 100644
--- a/mythtv/libs/libmythtv/avformatdecoder.cpp
+++ b/mythtv/libs/libmythtv/avformatdecoder.cpp
@@ -410,7 +410,7 @@ AvFormatDecoder::AvFormatDecoder(MythPlayer *parent,
       video_codec_id(kCodec_NONE),
       maxkeyframedist(-1),
       // Closed Caption & Teletext decoders
-      ignore_scte(false),
+      ignore_scte(0),
       invert_scte_field(0),
       last_scte_field(0),
       ccd608(new CC608Decoder(parent->GetCC608Reader())),
@@ -3676,17 +3676,31 @@ bool AvFormatDecoder::ProcessVideoFrame(AVStream *stream, AVFrame *mpa_pic)
 {
     AVCodecContext *context = stream->codec;
 
+    // We need to mediate between ATSC and SCTE data when both are present.  If
+    // both are present, we generally want to prefer ATSC.  However, there may
+    // be large sections of the recording where ATSC is used and other sections
+    // where SCTE is used.  In that case, we want to allow a natural transition
+    // from ATSC back to SCTE.  We do this by allowing 10 consecutive SCTE
+    // frames, without an intervening ATSC frame, to cause a switch back to
+    // considering SCTE frames.  The number 10 is somewhat arbitrarily chosen.
+
     uint cc_len = (uint) max(mpa_pic->scte_cc_len,0);
     uint8_t *cc_buf = mpa_pic->scte_cc_buf;
     bool scte = true;
 
+    // If we saw SCTE, then decrement a nonzero ignore_scte count.
+    if (cc_len > 0 && ignore_scte)
+        --ignore_scte;
+
     // If both ATSC and SCTE caption data are available, prefer ATSC
     if ((mpa_pic->atsc_cc_len > 0) || ignore_scte)
     {
-        ignore_scte = true;
         cc_len = (uint) max(mpa_pic->atsc_cc_len, 0);
         cc_buf = mpa_pic->atsc_cc_buf;
         scte = false;
+        // If we explicitly saw ATSC, then reset ignore_scte count.
+        if (cc_len > 0)
+            ignore_scte = 10;
     }
 
     // Decode CEA-608 and CEA-708 captions
diff --git a/mythtv/libs/libmythtv/avformatdecoder.h b/mythtv/libs/libmythtv/avformatdecoder.h
index 36e2714..70c8991 100644
--- a/mythtv/libs/libmythtv/avformatdecoder.h
+++ b/mythtv/libs/libmythtv/avformatdecoder.h
@@ -328,7 +328,7 @@ class AvFormatDecoder : public DecoderBase
     int maxkeyframedist;
 
     // Caption/Subtitle/Teletext decoders
-    bool             ignore_scte;
+    uint             ignore_scte;
     uint             invert_scte_field;
     uint             last_scte_field;
     CC608Decoder     *ccd608;
diff --git a/mythtv/libs/libmythtv/cc608decoder.cpp b/mythtv/libs/libmythtv/cc608decoder.cpp
index f9768c1..035ea42 100644
--- a/mythtv/libs/libmythtv/cc608decoder.cpp
+++ b/mythtv/libs/libmythtv/cc608decoder.cpp
@@ -323,6 +323,7 @@ void CC608Decoder::FormatCCField(int tc, int field, int data)
                                     .arg(b2, 2, 16));
                             // Encode as 0x7000 through 0x700f for the
                             // 16 possible values of b2.
+                            ccbuf[mode] += ' ';
                             ccbuf[mode] += QChar(0x7000 + (b2 & 0xf));
                             len = ccbuf[mode].length();
                             col[mode]++;
@@ -690,7 +691,7 @@ QString CC608Decoder::ToASCII(const QString &cc608str, bool suppress_unknown)
                 if (cpu >= 0x7000 && cpu < 0x7000 + 0x30)
                 {
                     if (!suppress_unknown)
-                        ret += QString("[%1]").arg(cpu - 0x7000, 2, 16);
+                        ret += QString("[%1]").arg(cpu, 2, 16);
                 }
                 else if (cpu <= 0x80)
                     ret += QString(cp.toLatin1());
@@ -856,7 +857,6 @@ int CC608Decoder::NewRowCC(int mode, int len)
     {
         ccbuf[mode] += QChar(newattr[mode] + 0x7000);
         len++;
-        col[mode]++;
     }
 
     newcol[mode] = 0;
diff --git a/mythtv/libs/libmythtv/channelscan/channelscanmiscsettings.h b/mythtv/libs/libmythtv/channelscan/channelscanmiscsettings.h
index 8a81f07..6a167b7 100644
--- a/mythtv/libs/libmythtv/channelscan/channelscanmiscsettings.h
+++ b/mythtv/libs/libmythtv/channelscan/channelscanmiscsettings.h
@@ -170,9 +170,11 @@ class ScanSymbolRateDVBS: public ComboBoxSetting, public TransientStorage
                 "million symbols per second."));
         addSelection("3333000");
         addSelection("22000000");
+        addSelection("23000000");
         addSelection("27500000", "27500000", true);
         addSelection("28000000");
         addSelection("28500000");
+        addSelection("29500000");
         addSelection("29900000");
     }
 };
diff --git a/mythtv/libs/libmythtv/datadirect.cpp b/mythtv/libs/libmythtv/datadirect.cpp
index 77cdef5..4ec9f92 100644
--- a/mythtv/libs/libmythtv/datadirect.cpp
+++ b/mythtv/libs/libmythtv/datadirect.cpp
@@ -539,8 +539,8 @@ DataDirectProcessor::DataDirectProcessor(uint lp, QString user, QString pass) :
     m_userid(user),                   m_password(pass),
     m_tmpDir("/tmp"),                 m_cacheData(false),
     m_inputFilename(""),              m_tmpPostFile(QString::null),
-    m_tmpResultFile(QString::null),   m_cookieFile(QString::null),
-    m_cookieFileDT()
+    m_tmpResultFile(QString::null),   m_tmpDDPFile(QString::null),
+    m_cookieFile(QString::null),      m_cookieFileDT()
 {
     {
         QMutexLocker locker(&user_agent_lock);
@@ -579,6 +579,12 @@ DataDirectProcessor::~DataDirectProcessor()
         unlink(tmp.constData());
     }
 
+    if (!m_tmpDDPFile.isEmpty())
+    {
+        QByteArray tmp = m_tmpDDPFile.toLatin1();
+        unlink(tmp.constData());
+    }
+
     if (!m_cookieFile.isEmpty())
     {
         QByteArray tmp = m_cookieFile.toLatin1();
@@ -1006,8 +1012,16 @@ bool DataDirectProcessor::DDPost(QString    ddurl,        QString   &inputFile,
     postdata += "</SOAP-ENV:Body>\n";
     postdata += "</SOAP-ENV:Envelope>\n";
 
-    if (inputFile.isEmpty()) {
-        inputFile = QString("/tmp/mythtv_ddp_data");
+    if (inputFile.isEmpty())
+    {
+        bool ok;
+        inputFile = GetDDPFilename(ok);
+        if (!ok)
+        {
+            LOG(VB_GENERAL, LOG_ERR, LOC +
+            "Failure creating temp ddp file");
+            return false;
+        }
     }
 
     QHash<QByteArray, QByteArray> headers;
@@ -1039,7 +1053,11 @@ bool DataDirectProcessor::DDPost(QString    ddurl,        QString   &inputFile,
         uncompressed = postdata;
 
     QFile file(inputFile);
-    file.open(QIODevice::WriteOnly);
+    if (!file.open(QIODevice::WriteOnly))
+    {
+        LOG(VB_GENERAL, LOG_ERR, LOC + QString("Failed to open temporary file: %1").arg(inputFile));
+        return false;
+    }
     file.write(uncompressed);
     file.close();
 
@@ -1099,7 +1117,11 @@ bool DataDirectProcessor::GrabNextSuggestedTime(void)
         .arg(postdata.size()));
 
     QFile file(resultFilename);
-    file.open(QIODevice::WriteOnly);
+    if (!file.open(QIODevice::WriteOnly))
+    {
+        LOG(VB_GENERAL, LOG_ERR, LOC + QString("Failed to open result file: %1").arg(resultFilename));
+        return false;
+    }
     file.write(postdata);
     file.close();
 
@@ -1161,11 +1183,9 @@ bool DataDirectProcessor::GrabData(const QDateTime &pstartDate,
 
     if (m_cacheData)
     {
-        QByteArray userid = GetUserID().toLatin1();
         cache_dd_data = m_tmpDir +
-            QString("/mythtv_dd_cache_%1_%2_UTC_%3_to_%4")
+            QString("/mythtv_dd_cache_%1_UTC_%2_to_%3")
             .arg(GetListingsProvider())
-            .arg(userid.constData())
             .arg(MythDate::toString(pstartDate, MythDate::kFilename))
             .arg(MythDate::toString(pendDate, MythDate::kFilename));
 
@@ -1833,6 +1853,18 @@ QString DataDirectProcessor::GetCookieFilename(bool &ok) const
     return m_cookieFile;
 }
 
+QString DataDirectProcessor::GetDDPFilename(bool &ok) const
+{
+    ok = true;
+    if (m_tmpDDPFile.isEmpty())
+    {
+        CreateTemp(m_tmpDir + "/mythtv_ddp_XXXXXX",
+                   "Failed to create temp ddp file",
+                   false, m_tmpDDPFile, ok);
+    }
+    return m_tmpDDPFile;
+}
+
 void DataDirectProcessor::SetUserID(const QString &uid)
 {
     m_userid = uid;
@@ -1877,7 +1909,11 @@ bool DataDirectProcessor::Post(QString url, const PostList &list,
         return true;
 
     QFile file(documentFile);
-    file.open(QIODevice::WriteOnly);
+    if (!file.open(QIODevice::WriteOnly))
+    {
+        LOG(VB_GENERAL, LOG_ERR, LOC + QString("Failed to open document file: %1").arg(documentFile));
+        return false;
+    }
     file.write(postdata);
     file.close();
 
diff --git a/mythtv/libs/libmythtv/datadirect.h b/mythtv/libs/libmythtv/datadirect.h
index 1cc84a1..83a6c53 100644
--- a/mythtv/libs/libmythtv/datadirect.h
+++ b/mythtv/libs/libmythtv/datadirect.h
@@ -405,6 +405,7 @@ class MTV_PUBLIC DataDirectProcessor
                     bool directory, QString &filename, bool &ok) const;
 
     QString GetResultFilename(bool &ok) const;
+    QString GetDDPFilename(bool &ok) const;
     QString GetCookieFilename(bool &ok) const;
 
     void SetAll(const QString &lineupid, bool val);
@@ -442,6 +443,7 @@ class MTV_PUBLIC DataDirectProcessor
     RawLineupMap    m_rawLineups;
     mutable QString m_tmpPostFile;
     mutable QString m_tmpResultFile;
+    mutable QString m_tmpDDPFile;
     mutable QString m_cookieFile;
     QDateTime       m_cookieFileDT;
 
diff --git a/mythtv/libs/libmythtv/eitcache.cpp b/mythtv/libs/libmythtv/eitcache.cpp
index ae7c98d..a855443 100644
--- a/mythtv/libs/libmythtv/eitcache.cpp
+++ b/mythtv/libs/libmythtv/eitcache.cpp
@@ -249,15 +249,12 @@ event_map_t * EITCache::LoadChannel(uint chanid)
     return eventMap;
 }
 
-void EITCache::WriteChannelToDB(QStringList &value_clauses, uint chanid)
+bool EITCache::WriteChannelToDB(QStringList &value_clauses, uint chanid)
 {
     event_map_t * eventMap = channelMap[chanid];
 
     if (!eventMap)
-    {
-        channelMap.remove(chanid);
-        return;
-    }
+        return false;
 
     uint size    = eventMap->size();
     uint updated = 0;
@@ -294,6 +291,8 @@ void EITCache::WriteChannelToDB(QStringList &value_clauses, uint chanid)
                                       "for channel %3 from cache.")
                 .arg(removed).arg(size).arg(chanid));
     pruneCnt += removed;
+
+    return true;
 }
 
 void EITCache::WriteToDB(void)
@@ -304,8 +303,10 @@ void EITCache::WriteToDB(void)
     key_map_t::iterator it = channelMap.begin();
     while (it != channelMap.end())
     {
-        WriteChannelToDB(value_clauses, it.key());
-        ++it;
+        if (!WriteChannelToDB(value_clauses, it.key()))
+            it = channelMap.erase(it);
+        else
+            ++it;
     }
 
     if(value_clauses.isEmpty())
diff --git a/mythtv/libs/libmythtv/eitcache.h b/mythtv/libs/libmythtv/eitcache.h
index 92e2e9a..aa62916 100644
--- a/mythtv/libs/libmythtv/eitcache.h
+++ b/mythtv/libs/libmythtv/eitcache.h
@@ -36,7 +36,7 @@ class EITCache
 
   private:
     event_map_t * LoadChannel(uint chanid);
-    void WriteChannelToDB(QStringList &value_clauses, uint chanid);
+    bool WriteChannelToDB(QStringList &value_clauses, uint chanid);
 
     // event key cache
     key_map_t   channelMap;
diff --git a/mythtv/libs/libmythtv/eithelper.cpp b/mythtv/libs/libmythtv/eithelper.cpp
index bf980ed..ab14a71 100644
--- a/mythtv/libs/libmythtv/eithelper.cpp
+++ b/mythtv/libs/libmythtv/eithelper.cpp
@@ -566,17 +566,49 @@ void EITHelper::AddEIT(const DVBEventInformationTable *eit)
                     // The CRID is a URI.  It could contain UTF8 sequences encoded
                     // as %XX but there's no advantage in decoding them.
                     // The BBC currently uses private types 0x31 and 0x32.
+                    // IDs from the authority eventis.nl are not fit for our scheduler
                     if (desc.ContentType(k) == 0x01 || desc.ContentType(k) == 0x31)
-                        programId = desc.ContentId(k);
+                    {
+                        if (!desc.ContentId(k).startsWith ("eventis.nl/"))
+                        {
+                            programId = desc.ContentId(k);
+                        }
+                    }
                     else if (desc.ContentType(k) == 0x02 || desc.ContentType(k) == 0x32)
                     {
-                        seriesId = desc.ContentId(k);
+                        if (!desc.ContentId(k).startsWith ("eventis.nl/"))
+                        {
+                            seriesId = desc.ContentId(k);
+                        }
                         category_type = ProgramInfo::kCategorySeries;
                     }
                 }
             }
         }
 
+        /* if we don't have a subtitle, try to parse one from private descriptors */
+        if (subtitle.isEmpty()) {
+            bool isUPC = false;
+            /* is this event carrying UPC private data? */
+            desc_list_t private_data_specifiers = MPEGDescriptor::FindAll(list, DescriptorID::private_data_specifier);
+            for (uint j = 0; j < private_data_specifiers.size(); j++) {
+                PrivateDataSpecifierDescriptor desc(private_data_specifiers[j]);
+                if (desc.PrivateDataSpecifier() == PrivateDataSpecifierID::UPC1) {
+                    isUPC = true;
+                }
+            }
+
+            if (isUPC) {
+                desc_list_t subtitles = MPEGDescriptor::FindAll(list, PrivateDescriptorID::upc_event_episode_title);
+                for (uint j = 0; j < subtitles.size(); j++) {
+                    PrivateUPCCablecomEpisodeTitleDescriptor desc(subtitles[j]);
+
+                    subtitle = desc.Text();
+                }
+            }
+        }
+
+
         QDateTime starttime = eit->StartTimeUTC(i);
         // fix starttime only if the duration is a multiple of a minute
         if (!(eit->DurationInSeconds(i) % 60))
@@ -989,6 +1021,8 @@ static void init_fixup(QMap<uint64_t,uint> &fix)
     fix[ 2057LL << 32 | 2U << 16] = EITFixUp::kFixUK;
     fix[ 2061LL << 32 | 2U << 16] = EITFixUp::kFixUK;
     fix[ 2063LL << 32 | 2U << 16] = EITFixUp::kFixUK;
+    fix[ 2064LL << 32 | 2U << 16] = EITFixUp::kFixUK;
+    fix[ 2066LL << 32 | 2U << 16] = EITFixUp::kFixUK;
     fix[ 2068LL << 32 | 2U << 16] = EITFixUp::kFixUK;
     fix[ 2301LL << 32 | 2U << 16] = EITFixUp::kFixUK;
     fix[ 2302LL << 32 | 2U << 16] = EITFixUp::kFixUK;
@@ -1014,6 +1048,8 @@ static void init_fixup(QMap<uint64_t,uint> &fix)
     fix[ 2052LL << 32 | 2U << 16] = EITFixUp::kFixUK;
     fix[ 2055LL << 32 | 2U << 16] = EITFixUp::kFixUK;
     fix[ 2056LL << 32 | 2U << 16] = EITFixUp::kFixUK;
+    fix[ 2076LL << 32 | 2U << 16] = EITFixUp::kFixUK;
+    fix[ 2081LL << 32 | 2U << 16] = EITFixUp::kFixUK;
     fix[ 2315LL << 32 | 2U << 16] = EITFixUp::kFixUK;
     fix[ 2316LL << 32 | 2U << 16] = EITFixUp::kFixUK;
     for (int i = 2402; i <= 2412; ++i)
diff --git a/mythtv/libs/libmythtv/jobqueue.cpp b/mythtv/libs/libmythtv/jobqueue.cpp
index f426309..ff79a47 100644
--- a/mythtv/libs/libmythtv/jobqueue.cpp
+++ b/mythtv/libs/libmythtv/jobqueue.cpp
@@ -1062,16 +1062,21 @@ int JobQueue::GetRunningJobID(uint chanid, const QDateTime &recstartts)
     return 0;
 }
 
-bool JobQueue::IsJobRunning(int jobType,
-                            uint chanid, const QDateTime &recstartts)
+bool JobQueue::IsJobStatusQueued(int status)
 {
-    int tmpStatus = GetJobStatus(jobType, chanid, recstartts);
+    return (status == JOB_QUEUED);
+}
 
-    if ((tmpStatus != JOB_UNKNOWN) && (tmpStatus != JOB_QUEUED) &&
-        (!(tmpStatus & JOB_DONE)))
-        return true;
+bool JobQueue::IsJobStatusRunning(int status)
+{
+    return ((status != JOB_UNKNOWN) && (status != JOB_QUEUED) &&
+            (!(status & JOB_DONE)));
+}
 
-    return false;
+bool JobQueue::IsJobRunning(int jobType,
+                            uint chanid, const QDateTime &recstartts)
+{
+    return IsJobStatusRunning(GetJobStatus(jobType, chanid, recstartts));
 }
 
 bool JobQueue::IsJobRunning(int jobType, const ProgramInfo &pginfo)
@@ -1094,12 +1099,7 @@ bool JobQueue::IsJobQueuedOrRunning(
 bool JobQueue::IsJobQueued(
     int jobType, uint chanid, const QDateTime &recstartts)
 {
-    int tmpStatus = GetJobStatus(jobType, chanid, recstartts);
-
-    if (tmpStatus & JOB_QUEUED)
-        return true;
-
-    return false;
+    return IsJobStatusQueued(GetJobStatus(jobType, chanid, recstartts));
 }
 
 QString JobQueue::JobText(int jobType)
diff --git a/mythtv/libs/libmythtv/jobqueue.h b/mythtv/libs/libmythtv/jobqueue.h
index e799912..ee7dcaa 100644
--- a/mythtv/libs/libmythtv/jobqueue.h
+++ b/mythtv/libs/libmythtv/jobqueue.h
@@ -161,6 +161,8 @@ class MTV_PUBLIC JobQueue : public QObject, public QRunnable
     static bool IsJobRunning(int jobType, const ProgramInfo &pginfo);
     static bool IsJobQueued(int jobType,
                             uint chanid, const QDateTime &recstartts);
+    static bool IsJobStatusQueued(int status);
+    static bool IsJobStatusRunning(int status);
     static bool PauseJob(int jobID);
     static bool ResumeJob(int jobID);
     static bool RestartJob(int jobID);
diff --git a/mythtv/libs/libmythtv/mhegic.cpp b/mythtv/libs/libmythtv/mhegic.cpp
index d8a5fbb..31456c1 100644
--- a/mythtv/libs/libmythtv/mhegic.cpp
+++ b/mythtv/libs/libmythtv/mhegic.cpp
@@ -18,6 +18,7 @@ using std::getenv;
 // Myth
 #include "netstream.h"
 #include "mythlogging.h"
+#include "mythcorecontext.h"
 
 #define LOC QString("[mhegic] ")
 
@@ -48,14 +49,16 @@ MHInteractionChannel::EStatus MHInteractionChannel::status()
         return kInactive;
     }
 
-    // TODO get this from mythdb
+    if (!gCoreContext->GetNumSetting("EnableMHEG", 0))
+        return kDisabled;
+
     QStringList opts = QString(getenv("MYTHMHEG")).split(':');
     if (opts.contains("noice", Qt::CaseInsensitive))
         return kDisabled;
     else if (opts.contains("ice", Qt::CaseInsensitive))
         return kActive;
-    else // Default
-        return kActive;
+
+    return gCoreContext->GetNumSetting("EnableMHEGic", 1) ? kActive : kDisabled;
 }
 
 static inline bool isCached(const QString& csPath)
diff --git a/mythtv/libs/libmythtv/mpeg/dvbdescriptors.h b/mythtv/libs/libmythtv/mpeg/dvbdescriptors.h
index 682e5b5..f5a74bf 100644
--- a/mythtv/libs/libmythtv/mpeg/dvbdescriptors.h
+++ b/mythtv/libs/libmythtv/mpeg/dvbdescriptors.h
@@ -926,12 +926,13 @@ class TerrestrialDeliverySystemDescriptor : public MPEGDescriptor
         kConstellationQPSK  = 0x0,
         kConstellationQAM16 = 0x1,
         kConstellationQAM64 = 0x2,
+        kConstellationQAM256 = 0x3,
     };
     uint Constellation(void) const { return _data[7]>>6; }
     QString ConstellationString(void) const
     {
-        static QString cs[] = { "qpsk", "qam_16", "qam_64" };
-        return (Constellation() <= kConstellationQAM64) ?
+        static QString cs[] = { "qpsk", "qam_16", "qam_64", "qam_256" };
+        return (Constellation() <= kConstellationQAM256) ?
             cs[Constellation()] : "auto";
     }
     // hierarchy_information    3   7.2
@@ -1357,6 +1358,10 @@ class PrivateDataSpecifierDescriptor : public MPEGDescriptor
     // descriptor_length        8   1.0
 
     // private_data_specifier  32   2.0
+    uint32_t PrivateDataSpecifier (void) const
+    {
+        return (_data[2] << 24 | _data[3] << 16 | _data[4] << 8 | _data[5]);
+    }
 };
 
 // DVB Bluebook A038 (Sept 2011) p 79
@@ -2070,4 +2075,45 @@ class DefaultAuthorityDescriptor : public MPEGDescriptor
     }
 };
 
+/*
+ * private UPC Cablecom (Austria) episode descriptor for Horizon middleware
+ */
+class PrivateUPCCablecomEpisodeTitleDescriptor : public MPEGDescriptor
+{
+    public:
+     PrivateUPCCablecomEpisodeTitleDescriptor(const unsigned char *data, int len = 300) :
+         MPEGDescriptor(data, len, PrivateDescriptorID::upc_event_episode_title) { }
+    //       Name             bits  loc  expected value
+    // descriptor_tag           8   0.0       0xa7
+    // descriptor_length        8   1.0
+
+    // ISO_639_language_code   24   2.0
+    int LanguageKey(void) const
+    {
+        return iso639_str3_to_key(&_data[2]);
+    }
+    QString LanguageString(void) const
+    {
+        return iso639_key_to_str3(LanguageKey());
+    }
+    int CanonicalLanguageKey(void) const
+    {
+        return iso639_key_to_canonical_key(LanguageKey());
+    }
+    QString CanonicalLanguageString(void) const
+    {
+        return iso639_key_to_str3(CanonicalLanguageKey());
+    }
+
+    uint TextLength(void) const
+    {
+        return _data[1] - 3;
+    }
+
+    QString Text(void) const
+    {
+        return dvb_decode_text(&_data[5], TextLength());
+    }
+};
+
 #endif
diff --git a/mythtv/libs/libmythtv/mpeg/mpegdescriptors.h b/mythtv/libs/libmythtv/mpeg/mpegdescriptors.h
index 1efd30a..626bc5a 100644
--- a/mythtv/libs/libmythtv/mpeg/mpegdescriptors.h
+++ b/mythtv/libs/libmythtv/mpeg/mpegdescriptors.h
@@ -191,6 +191,9 @@ class PrivateDescriptorID
         dish_event_vchip            = 0x95, /* implemented */
         dish_event_tags             = 0x96, /* implemented */
 
+        // Private -- CH UPC Cablecom
+        upc_event_episode_title     = 0xA7,
+
         // Private -- premiere.de
         premiere_content_order        = 0xF0,
         premiere_parental_information = 0xF1,
@@ -198,6 +201,19 @@ class PrivateDescriptorID
     };
 };
 
+/*
+ * Private_Data_Specifier_ID from http://www.dvbservices.com/identifiers/private_data_spec_id
+ */
+class PrivateDataSpecifierID
+{
+  public:
+    enum
+    {
+        /* UPC Cablecom */
+        UPC1 = 0x00000600,
+    };
+};
+
 class MTV_PUBLIC MPEGDescriptor
 {
   public:
diff --git a/mythtv/libs/libmythtv/mpeg/mpegstreamdata.cpp b/mythtv/libs/libmythtv/mpeg/mpegstreamdata.cpp
index e295975..cc293e8 100644
--- a/mythtv/libs/libmythtv/mpeg/mpegstreamdata.cpp
+++ b/mythtv/libs/libmythtv/mpeg/mpegstreamdata.cpp
@@ -147,9 +147,8 @@ void MPEGStreamData::SetRecordingType(const QString &recording_type)
 {
     _recording_type = recording_type;
     _recording_type.detach();
-    uint neededVideo = (_recording_type == "tv")    ? 1 : 0;
     uint neededAudio = (_recording_type == "audio") ? 1 : 0;
-    SetVideoStreamsRequired(neededVideo);
+    SetVideoStreamsRequired(0);
     SetAudioStreamsRequired(neededAudio);
 }
 
@@ -578,6 +577,12 @@ bool MPEGStreamData::CreatePMTSingleProgram(const ProgramMapTable &pmt)
             audio_cnt++;
             audioPIDs.push_back(pid);
         }
+        else if (_recording_type == "audio" )
+        {
+            // If not an audio PID but we only want audio,
+            // ignore this PID.
+            continue;
+        }
 
 #ifdef DEBUG_MPEG_RADIO
         if (is_video)
@@ -596,12 +601,13 @@ bool MPEGStreamData::CreatePMTSingleProgram(const ProgramMapTable &pmt)
         // Filter out streams not used for basic television
         if (_recording_type == "tv" && !is_audio && !is_video &&
             !MPEGDescriptor::Find(desc, DescriptorID::teletext) &&
-            !MPEGDescriptor::Find(desc, DescriptorID::subtitling))
+            !MPEGDescriptor::Find(desc, DescriptorID::subtitling) &&
+            pid != pmt.PCRPID()) // We must not strip the PCR!
         {
             continue;
         }
 
-        if (!is_audio && !is_video)
+        if (!is_audio && !is_video) //NOTE: Anything which isn't audio or video is data
             dataPIDs.push_back(pid);
 
         pdesc.push_back(desc);
diff --git a/mythtv/libs/libmythtv/mythplayer.cpp b/mythtv/libs/libmythtv/mythplayer.cpp
index 0381063..59ebd1b 100644
--- a/mythtv/libs/libmythtv/mythplayer.cpp
+++ b/mythtv/libs/libmythtv/mythplayer.cpp
@@ -1377,6 +1377,7 @@ void MythPlayer::DisableCaptions(uint mode, bool osd_msg)
 
     QMutexLocker locker(&osdLock);
 
+    textDesired = textDisplayMode & kDisplayAllTextCaptions;
     QString msg = "";
     if (kDisplayNUVTeletextCaptions & mode)
         msg += tr("TXT CAP");
@@ -1413,7 +1414,8 @@ void MythPlayer::DisableCaptions(uint mode, bool osd_msg)
 void MythPlayer::EnableCaptions(uint mode, bool osd_msg)
 {
     QMutexLocker locker(&osdLock);
-    QString msg;
+    textDesired = mode & kDisplayAllTextCaptions;
+    QString msg = "";
     if ((kDisplayCC608 & mode) || (kDisplayCC708 & mode) ||
         (kDisplayAVSubtitle & mode) || kDisplayRawTextSubtitle & mode)
     {
@@ -1510,8 +1512,8 @@ void MythPlayer::SetCaptionsEnabled(bool enable, bool osd_msg)
         {
             EnableCaptions(mode, osd_msg);
         }
-        ResetCaptions();
     }
+    ResetCaptions();
 }
 
 bool MythPlayer::GetCaptionsEnabled(void)
@@ -3975,7 +3977,11 @@ void MythPlayer::ClearAfterSeek(bool clearvideobuffers)
     tc_wrap[TC_AUDIO] = savedAudioTimecodeOffset;
 
     audio.Reset();
-    ResetCaptions();
+    // Reenable (or re-disable) subtitles, which ultimately does
+    // nothing except to call ResetCaptions() to erase any captions
+    // currently on-screen.  The key is that the erasing is done in
+    // the UI thread, not the decoder thread.
+    EnableSubtitles(textDesired);
     deleteMap.TrackerReset(framesPlayed);
     commBreakMap.SetTracker(framesPlayed);
     commBreakMap.ResetLastSkip();
diff --git a/mythtv/libs/libmythtv/mythplayer.h b/mythtv/libs/libmythtv/mythplayer.h
index 541a0d5..a1df5f2 100644
--- a/mythtv/libs/libmythtv/mythplayer.h
+++ b/mythtv/libs/libmythtv/mythplayer.h
@@ -77,6 +77,8 @@ enum
     kDisplayRawTextSubtitle     = 0x080,
     kDisplayAllCaptions         = 0x0FF,
     kDisplayTeletextMenu        = 0x100,
+    kDisplayAllTextCaptions     = ~kDisplayDVDButton &
+                                   kDisplayAllCaptions,
 };
 
 enum PlayerFlags
diff --git a/mythtv/libs/libmythtv/openglvideo.cpp b/mythtv/libs/libmythtv/openglvideo.cpp
index 2de7d4c..e16af76 100644
--- a/mythtv/libs/libmythtv/openglvideo.cpp
+++ b/mythtv/libs/libmythtv/openglvideo.cpp
@@ -469,7 +469,9 @@ bool OpenGLVideo::AddFilter(OpenGLFilterType filter)
             success = false;
     }
 
-    if (success && (filter != kGLFilterNone) && (filter != kGLFilterResize))
+    if (success &&
+        (((filter != kGLFilterNone) && (filter != kGLFilterResize)) ||
+         ((gl_features & kGLSL) && (filter == kGLFilterResize))))
     {
         program = AddFragmentProgram(filter);
         if (!program)
@@ -1040,7 +1042,8 @@ void OpenGLVideo::PrepareFrame(bool topfieldfirst, FrameScanType scan,
 
         // enable fragment program and set any environment variables
         GLuint program = 0;
-        if ((type != kGLFilterNone) && (type != kGLFilterResize))
+        if (((type != kGLFilterNone) && (type != kGLFilterResize)) ||
+            ((gl_features & kGLSL) && (type == kGLFilterResize)))
         {
             GLuint prog_ref = 0;
 
@@ -1575,6 +1578,16 @@ static const QString BicubicShader =
 "    gl_FragColor = mix(tex00, tex10, parmx.z);\n"
 "}\n";
 
+static const QString DefaultFragmentShader =
+"GLSL_DEFINES"
+"uniform GLSL_SAMPLER s_texture0;\n"
+"varying vec2 v_texcoord0;\n"
+"void main(void)\n"
+"{\n"
+"    vec4 color   = GLSL_TEXTURE(s_texture0, v_texcoord0);\n"
+"    gl_FragColor = vec4(color.xyz, 1.0);\n"
+"}\n";
+
 void OpenGLVideo::GetProgramStrings(QString &vertex, QString &fragment,
                                     OpenGLFilterType filter,
                                     QString deint, FrameScanType field)
@@ -1601,7 +1614,9 @@ void OpenGLVideo::GetProgramStrings(QString &vertex, QString &fragment,
             break;
         }
         case kGLFilterNone:
+            break;
         case kGLFilterResize:
+            fragment = DefaultFragmentShader;
             break;
         case kGLFilterBicubic:
             fragment = BicubicShader;
diff --git a/mythtv/libs/libmythtv/recorders/NuppelVideoRecorder.cpp b/mythtv/libs/libmythtv/recorders/NuppelVideoRecorder.cpp
index ed57a6b..323729f 100644
--- a/mythtv/libs/libmythtv/recorders/NuppelVideoRecorder.cpp
+++ b/mythtv/libs/libmythtv/recorders/NuppelVideoRecorder.cpp
@@ -64,6 +64,7 @@ extern "C" {
 #include "RTjpegN.h"
 
 #include "programinfo.h"
+#include "mythsystemevent.h"
 
 #define LOC QString("NVR(%1): ").arg(videodevice)
 
@@ -3076,6 +3077,9 @@ void NuppelVideoRecorder::WriteVideo(VideoFrame *frame, bool skipsync,
         ringBuffer->Write(out, out_len);
     }
 
+    if (framesWritten == 0)
+        SendMythSystemRecEvent("REC_STARTED_WRITING", curRecording);
+
     frameofgop++;
     framesWritten++;
 
diff --git a/mythtv/libs/libmythtv/recorders/dtvrecorder.cpp b/mythtv/libs/libmythtv/recorders/dtvrecorder.cpp
index 099f8a6..9b627ff 100644
--- a/mythtv/libs/libmythtv/recorders/dtvrecorder.cpp
+++ b/mythtv/libs/libmythtv/recorders/dtvrecorder.cpp
@@ -1135,7 +1135,7 @@ void DTVRecorder::FindPSKeyFrames(const uint8_t *buffer, uint len)
         if (hasKeyFrame)
         {
             _last_keyframe_seen = _frames_seen_count;
-            HandleKeyframe(_payload_buffer.size() - (bufptr - bufstart));
+            HandleKeyframe((int64_t)_payload_buffer.size() - (bufptr - bufstart));
         }
 
         if ((aspectRatio > 0) && (aspectRatio != m_videoAspect))
@@ -1299,6 +1299,12 @@ void DTVRecorder::HandleSingleProgramPMT(ProgramMapTable *pmt, bool insert)
     for (uint i = 0; i < pmt->StreamCount(); ++i)
         _stream_id[pmt->StreamPID(i)] = pmt->StreamType(i);
 
+    // If the PCRPID is valid and the PCR is not contained
+    // in another stream, make sure the PCR stream is not
+    // discarded (use PrivSec type as dummy 'valid' value)
+    if(pmt->PCRPID() != 0x1fff && pmt->FindPID(pmt->PCRPID()) == -1)
+        _stream_id[pmt->PCRPID()] = StreamID::PrivSec;
+
     if (!ringBuffer)
         return;
 
@@ -1336,6 +1342,11 @@ bool DTVRecorder::ProcessTSPacket(const TSPacket &tspacket)
         FindOtherKeyframes(&tspacket);
         _buffer_packets = false;
     }
+    else if (_stream_id[pid] == 0)
+    {
+        // Ignore this packet if the PID should be stripped
+        return true;
+    }
     else
     {
         // There are audio/video streams. Only write the packet
diff --git a/mythtv/libs/libmythtv/subtitlescreen.cpp b/mythtv/libs/libmythtv/subtitlescreen.cpp
index a3863f6..b48fb9c 100644
--- a/mythtv/libs/libmythtv/subtitlescreen.cpp
+++ b/mythtv/libs/libmythtv/subtitlescreen.cpp
@@ -1311,13 +1311,6 @@ static QString extract_cc608(QString &text, int &color,
     else
     {
         result = text.left(nextControl);
-        // Print the space character before handling the next control
-        // character, otherwise the space character will be lost due
-        // to the text.trimmed() operation in the MythUISimpleText
-        // constructor, combined with the left-justification of
-        // captions.
-        if (text[nextControl] < (0x7000 + 0x10))
-            result += " ";
         text = text.mid(nextControl);
     }
 
diff --git a/mythtv/libs/libmythtv/test/test_mpegtables/test_mpegtables.h b/mythtv/libs/libmythtv/test/test_mpegtables/test_mpegtables.h
index fa1412b..84e9a6d 100644
--- a/mythtv/libs/libmythtv/test/test_mpegtables/test_mpegtables.h
+++ b/mythtv/libs/libmythtv/test/test_mpegtables/test_mpegtables.h
@@ -204,4 +204,56 @@ class TestMPEGTables: public QObject
         QCOMPARE (descriptor2.ContentId(), QString("eventis.nl/00000000-0000-1000-0608-000000003F9C"));
         QCOMPARE (descriptor.ContentId(1), QString("eventis.nl/00000000-0000-1000-0608-000000003F9C"));
     }
+
+    /* test for coverity 1047220: Incorrect deallocator used:
+     * Calling "PSIPTable::~PSIPTable()" frees "(&psip)->_fullbuffer"
+     * using "free" but it should have been freed using "operator delete[]".
+     *
+     * _allocSize should be 0 thus we are not freeing something we didn't
+     * allocate in the first place (false positive)
+     */
+    void clone_test(void)
+    {
+        unsigned char *si_data = new unsigned char[8];
+        si_data[0] = 0x70; /* pp....37 */
+        si_data[1] = 0x70;
+        si_data[2] = 0x05;
+        si_data[3] = 0xdc;
+        si_data[4] = 0xa9;
+        si_data[5] = 0x12;
+        si_data[6] = 0x33;
+        si_data[7] = 0x37;
+
+        const PSIPTable si_table(si_data);
+
+        QVERIFY (!si_table.IsClone());
+    }
+
+    /* test PrivateDataSpecifierDescriptor */
+    void PrivateDataSpecifierDescriptor_test (void)
+    {
+        /* from https://code.mythtv.org/trac/ticket/12091 */
+        const unsigned char si_data[] = { 
+            0x5f, 0x04, 0x00, 0x00, 0x06, 0x00
+        };
+        PrivateDataSpecifierDescriptor desc(si_data);
+        QCOMPARE (desc.PrivateDataSpecifier(), (uint32_t) PrivateDataSpecifierID::UPC1);
+    }
+
+    /* test for https://code.mythtv.org/trac/ticket/12091
+     * UPC Cablecom switched from standard DVB key/value set to
+     * custom descriptors
+     */
+    void PrivateUPCCablecomEpisodetitleDescriptor_test (void)
+    {
+        const unsigned char si_data[] = {
+            0xa7, 0x13, 0x67, 0x65, 0x72, 0x05, 0x4b, 0x72,  0x61, 0x6e, 0x6b, 0x20, 0x76, 0x6f, 0x72, 0x20,  /* ..ger.Krank vor  */
+            0x4c, 0x69, 0x65, 0x62, 0x65                                                                      /* Liebe            */
+        };
+
+        PrivateUPCCablecomEpisodeTitleDescriptor descriptor(si_data);
+        QCOMPARE (descriptor.CanonicalLanguageString(), QString("ger"));
+        QCOMPARE (descriptor.TextLength(), (uint) 16);
+        QCOMPARE (descriptor.Text(), QString("Krank vor Liebe"));
+    }
 };
diff --git a/mythtv/libs/libmythtv/test/test_mpegtables/test_mpegtables.pro b/mythtv/libs/libmythtv/test/test_mpegtables/test_mpegtables.pro
index 2ed5ac6..b33b3fd 100644
--- a/mythtv/libs/libmythtv/test/test_mpegtables/test_mpegtables.pro
+++ b/mythtv/libs/libmythtv/test/test_mpegtables/test_mpegtables.pro
@@ -14,6 +14,10 @@ TARGET = test_mpegtables
 DEPENDPATH += . ../..
 INCLUDEPATH += . ../.. ../../mpeg ../../../libmythui ../../../libmyth ../../../libmythbase
 
+LIBS += ../../dvbdescriptors.o
+LIBS += ../../iso6937tables.o
+LIBS += ../../freesat_huffman.o
+
 LIBS += -L../../../libmythbase -lmythbase-$$LIBVERSION
 LIBS += -L../../../libmythui -lmythui-$$LIBVERSION
 LIBS += -L../../../libmythupnp -lmythupnp-$$LIBVERSION
diff --git a/mythtv/libs/libmythtv/transporteditor.cpp b/mythtv/libs/libmythtv/transporteditor.cpp
index 2582133..de9b07b 100644
--- a/mythtv/libs/libmythtv/transporteditor.cpp
+++ b/mythtv/libs/libmythtv/transporteditor.cpp
@@ -470,9 +470,11 @@ class DVBSymbolRate : public ComboBoxSetting, public MuxDBStorage
                 "million symbols per second."));
         addSelection("3333000");
         addSelection("22000000");
+        addSelection("23000000");
         addSelection("27500000", "27500000", true);
         addSelection("28000000");
         addSelection("28500000");
+        addSelection("29500000");
         addSelection("29900000");
     };
 };
diff --git a/mythtv/libs/libmythtv/tv_play.cpp b/mythtv/libs/libmythtv/tv_play.cpp
index ae43970..fb799fb 100644
--- a/mythtv/libs/libmythtv/tv_play.cpp
+++ b/mythtv/libs/libmythtv/tv_play.cpp
@@ -4865,6 +4865,20 @@ bool TV::ActivePostQHandleAction(PlayerContext *ctx, const QStringList &actions)
             ctx->player->GoToMenu("root");
         ctx->UnlockDeletePlayer(__FILE__, __LINE__);
     }
+    else if (has_action(ACTION_JUMPTODVDCHAPTERMENU, actions) && isdisc)
+    {
+        ctx->LockDeletePlayer(__FILE__, __LINE__);
+        if (ctx->player)
+            ctx->player->GoToMenu("chapter");
+        ctx->UnlockDeletePlayer(__FILE__, __LINE__);
+    }
+    else if (has_action(ACTION_JUMPTODVDTITLEMENU, actions) && isdisc)
+    {
+        ctx->LockDeletePlayer(__FILE__, __LINE__);
+        if (ctx->player)
+            ctx->player->GoToMenu("title");
+        ctx->UnlockDeletePlayer(__FILE__, __LINE__);
+    }
     else if (has_action(ACTION_JUMPTOPOPUPMENU, actions) && isdisc)
     {
         ctx->LockDeletePlayer(__FILE__, __LINE__);
diff --git a/mythtv/libs/libmythtv/videosource.cpp b/mythtv/libs/libmythtv/videosource.cpp
index 3f5b595..132b023 100644
--- a/mythtv/libs/libmythtv/videosource.cpp
+++ b/mythtv/libs/libmythtv/videosource.cpp
@@ -1144,6 +1144,7 @@ class DVBTuningDelay : public SpinBoxSetting, public CaptureCardDBStorage
         CaptureCardDBStorage(this, parent, "dvb_tuning_delay")
     {
         setLabel(QObject::tr("DVB tuning delay (ms)"));
+        setValue(true);
         setHelpText(
             QObject::tr("Some Linux DVB drivers, in particular for the "
                         "Hauppauge Nova-T, require that we slow down "
diff --git a/mythtv/libs/libmythui/mythuibuttonlist.cpp b/mythtv/libs/libmythui/mythuibuttonlist.cpp
index 95966a5..ea0d634 100644
--- a/mythtv/libs/libmythui/mythuibuttonlist.cpp
+++ b/mythtv/libs/libmythui/mythuibuttonlist.cpp
@@ -1408,7 +1408,6 @@ void MythUIButtonList::CalculateButtonPositions(void)
 
     for (; button < (int)m_itemsVisible; button++)
         m_ButtonList[button]->SetVisible(false);
-
 }
 
 void MythUIButtonList::SanitizePosition(void)
@@ -1432,6 +1431,14 @@ void MythUIButtonList::CalculateArrowStates()
 
     m_needsUpdate = false;
 
+    // mark the visible buttons as invisible
+    QMap<int, MythUIButtonListItem*>::const_iterator i = m_ButtonToItem.constBegin();
+    while (i != m_ButtonToItem.constEnd())
+    {
+        i.value()->setVisible(false);
+        ++i;
+    }
+
     // set topitem, top position
     SanitizePosition();
     m_ButtonToItem.clear();
@@ -3042,6 +3049,7 @@ MythUIButtonListItem::MythUIButtonListItem(MythUIButtonList *lbtype,
     m_state     = state;
     m_showArrow = showArrow;
     m_data      = 0;
+    m_isVisible = false;
 
     if (state >= NotChecked)
         m_checkable = true;
@@ -3066,6 +3074,7 @@ MythUIButtonListItem::MythUIButtonListItem(MythUIButtonList *lbtype,
     m_checkable = false;
     m_state     = CantCheck;
     m_showArrow = false;
+    m_isVisible = false;
 
     if (m_parent)
         m_parent->InsertItem(this, listPosition);
@@ -3101,7 +3110,7 @@ void MythUIButtonListItem::SetText(const QString &text, const QString &name,
     else
         m_text = text;
 
-    if (m_parent)
+    if (m_parent && m_isVisible)
         m_parent->Update();
 }
 
@@ -3119,7 +3128,7 @@ void MythUIButtonListItem::SetTextFromMap(const InfoMap &infoMap,
         ++map_it;
     }
 
-    if (m_parent)
+    if (m_parent && m_isVisible)
         m_parent->Update();
 }
 
@@ -3216,7 +3225,7 @@ void MythUIButtonListItem::SetFontState(const QString &state,
     else
         m_fontState = state;
 
-    if (m_parent)
+    if (m_parent && m_isVisible)
         m_parent->Update();
 }
 
@@ -3248,7 +3257,7 @@ void MythUIButtonListItem::SetImage(MythImage *image, const QString &name)
         m_image = image;
     }
 
-    if (m_parent)
+    if (m_parent && m_isVisible)
         m_parent->Update();
 }
 
@@ -3304,7 +3313,7 @@ void MythUIButtonListItem::SetImage(
         do_update = true;
     }
 
-    if (m_parent && do_update)
+    if (m_parent && do_update && m_isVisible)
         m_parent->Update();
 }
 
@@ -3341,7 +3350,7 @@ void MythUIButtonListItem::DisplayState(const QString &state,
         do_update = true;
     }
 
-    if (m_parent && do_update)
+    if (m_parent && do_update && m_isVisible)
         m_parent->Update();
 }
 
@@ -3373,7 +3382,7 @@ void MythUIButtonListItem::setChecked(MythUIButtonListItem::CheckState state)
 
     m_state = state;
 
-    if (m_parent)
+    if (m_parent && m_isVisible)
         m_parent->Update();
 }
 
@@ -3411,6 +3420,7 @@ void MythUIButtonListItem::SetToRealButton(MythUIStateType *button, bool selecte
         return;
 
     m_parent->ItemVisible(this);
+    m_isVisible = true;
 
     QString state;
 
@@ -3508,7 +3518,7 @@ void MythUIButtonListItem::SetToRealButton(MythUIStateType *button, bool selecte
 
             QString newText = text->GetTemplateText();
 
-            QRegExp regexp("%(([^\\|%]+)?\\||\\|(.))?(\\w+)(\\|(.+))?%");
+            QRegExp regexp("%(([^\\|%]+)?\\||\\|(.))?(\\S+)(\\|(.+))?%");
             regexp.setMinimal(true);
 
             if (!newText.isEmpty() && newText.contains(regexp))
diff --git a/mythtv/libs/libmythui/mythuibuttonlist.h b/mythtv/libs/libmythui/mythuibuttonlist.h
index c62862c..de27a79 100644
--- a/mythtv/libs/libmythui/mythuibuttonlist.h
+++ b/mythtv/libs/libmythui/mythuibuttonlist.h
@@ -85,6 +85,9 @@ class MUI_PUBLIC MythUIButtonListItem
     void DisplayState(const QString &state, const QString &name);
     void SetStatesFromMap(const InfoMap &stateMap);
 
+    bool isVisible() const { return m_isVisible; }
+    void setVisible(bool flag) { m_isVisible = flag; }
+
     bool checkable() const;
     void setCheckable(bool flag);
 
@@ -110,6 +113,7 @@ class MUI_PUBLIC MythUIButtonListItem
     CheckState      m_state;
     QVariant        m_data;
     bool            m_showArrow;
+    bool            m_isVisible;
 
     QMap<QString, TextProperties> m_strings;
     QMap<QString, MythImage*> m_images;
diff --git a/mythtv/libs/libmythui/mythuiimage.cpp b/mythtv/libs/libmythui/mythuiimage.cpp
index 4707f01..5674bf1 100644
--- a/mythtv/libs/libmythui/mythuiimage.cpp
+++ b/mythtv/libs/libmythui/mythuiimage.cpp
@@ -654,6 +654,8 @@ void MythUIImage::Init(void)
     m_animatedImage = false;
 
     m_runningThreads = 0;
+
+    m_showingRandomImage = false;
 }
 
 /**
@@ -1103,7 +1105,7 @@ bool MythUIImage::Load(bool allowLoadInBackground, bool forceStat)
  */
 void MythUIImage::Pulse(void)
 {
-    QWriteLocker updateLocker(&d->m_UpdateLock);
+    d->m_UpdateLock.lockForWrite();
 
     int delay = -1;
 
@@ -1115,39 +1117,51 @@ void MythUIImage::Pulse(void)
     if (delay > 0 &&
         abs(m_LastDisplay.msecsTo(QTime::currentTime())) > delay)
     {
-        m_ImagesLock.lock();
-
-        if (m_animationCycle == kCycleStart)
+        if (m_showingRandomImage)
         {
-            ++m_CurPos;
-
-            if (m_CurPos >= (uint)m_Images.size())
-                m_CurPos = 0;
+            FindRandomImage();
+            d->m_UpdateLock.unlock();
+            Load();
+            d->m_UpdateLock.lockForWrite();
         }
-        else if (m_animationCycle == kCycleReverse)
+        else
         {
-            if ((m_CurPos + 1) >= (uint)m_Images.size())
+            m_ImagesLock.lock();
+
+            if (m_animationCycle == kCycleStart)
             {
-                m_animationReverse = true;
+                ++m_CurPos;
+
+                if (m_CurPos >= (uint)m_Images.size())
+                    m_CurPos = 0;
             }
-            else if (m_CurPos == 0)
+            else if (m_animationCycle == kCycleReverse)
             {
-                m_animationReverse = false;
+                if ((m_CurPos + 1) >= (uint)m_Images.size())
+                {
+                    m_animationReverse = true;
+                }
+                else if (m_CurPos == 0)
+                {
+                    m_animationReverse = false;
+                }
+
+                if (m_animationReverse)
+                    --m_CurPos;
+                else
+                    ++m_CurPos;
             }
 
-            if (m_animationReverse)
-                --m_CurPos;
-            else
-                ++m_CurPos;
+            m_ImagesLock.unlock();
         }
 
-        m_ImagesLock.unlock();
-
         SetRedraw();
         m_LastDisplay = QTime::currentTime();
     }
 
     MythUIType::Pulse();
+
+    d->m_UpdateLock.unlock();
 }
 
 /**
@@ -1245,34 +1259,10 @@ bool MythUIImage::ParseElement(
 
         if (m_imageProperties.filename.endsWith('/'))
         {
-            QDir imageDir(m_imageProperties.filename);
+            m_showingRandomImage = true;
+            m_imageDirectory = m_imageProperties.filename;
 
-            if (!imageDir.exists())
-            {
-                QString themeDir = GetMythUI()->GetThemeDir() + '/';
-                imageDir = themeDir + m_imageProperties.filename;
-            }
-
-            QStringList imageTypes;
-
-            QList< QByteArray > exts = QImageReader::supportedImageFormats();
-            QList< QByteArray >::Iterator it = exts.begin();
-
-            for (; it != exts.end(); ++it)
-            {
-                imageTypes.append(QString("*.").append(*it));
-            }
-
-            imageDir.setNameFilters(imageTypes);
-
-            QStringList imageList = imageDir.entryList();
-            QString randFile;
-
-            if (imageList.size())
-                randFile = QString("%1%2").arg(m_imageProperties.filename)
-                           .arg(imageList.takeAt(random() % imageList.size()));
-
-            m_OrigFilename = m_imageProperties.filename = randFile;
+            FindRandomImage();
         }
     }
     else if (element.tagName() == "filepattern")
@@ -1432,6 +1422,9 @@ void MythUIImage::CopyFrom(MythUIType *base)
     m_animationCycle = im->m_animationCycle;
     m_animatedImage = im->m_animatedImage;
 
+    m_showingRandomImage = im->m_showingRandomImage;
+    m_imageDirectory = im->m_imageDirectory;
+
     MythUIType::CopyFrom(base);
 
     // We need to update forceSize in case the parent area has changed
@@ -1621,6 +1614,43 @@ void MythUIImage::customEvent(QEvent *event)
         // No Images were loaded, so trigger Reset to default
         Reset();
     }
+}
+
+void MythUIImage::FindRandomImage(void)
+{
+    QDir imageDir(m_imageDirectory);
+
+    if (!imageDir.exists())
+    {
+        QString themeDir = GetMythUI()->GetThemeDir() + '/';
+        imageDir = themeDir + m_imageDirectory;
+    }
+
+    QStringList imageTypes;
+
+    QList< QByteArray > exts = QImageReader::supportedImageFormats();
+    QList< QByteArray >::Iterator it = exts.begin();
+
+    for (; it != exts.end(); ++it)
+    {
+        imageTypes.append(QString("*.").append(*it));
+    }
+
+    imageDir.setNameFilters(imageTypes);
 
+    QStringList imageList = imageDir.entryList();
+    QString randFile;
+
+    if (imageList.size())
+    {
+        // try to find a different image
+        do
+        {
+            randFile = QString("%1%2").arg(m_imageDirectory)
+                                      .arg(imageList.takeAt(random() % imageList.size()));
+
+        } while (imageList.size() > 1 && randFile == m_OrigFilename);
+    }
 
+    m_OrigFilename = m_imageProperties.filename = randFile;
 }
diff --git a/mythtv/libs/libmythui/mythuiimage.h b/mythtv/libs/libmythui/mythuiimage.h
index 90901d3..a90ee3f 100644
--- a/mythtv/libs/libmythui/mythuiimage.h
+++ b/mythtv/libs/libmythui/mythuiimage.h
@@ -142,6 +142,8 @@ class MUI_PUBLIC MythUIImage : public MythUIType
     void SetCropRect(int x, int y, int width, int height);
     void SetCropRect(const MythRect &rect);
 
+    void FindRandomImage(void);
+
     QString m_Filename;
     QString m_OrigFilename;
 
@@ -162,6 +164,9 @@ class MUI_PUBLIC MythUIImage : public MythUIType
 
     int m_runningThreads;
 
+    bool m_showingRandomImage;
+    QString m_imageDirectory;
+
     MythUIImagePrivate *d;
 
     enum AnimationCycle {kCycleStart, kCycleReverse};
diff --git a/mythtv/libs/libmythui/mythuitext.cpp b/mythtv/libs/libmythui/mythuitext.cpp
index 0f7a6f6..60fa71f 100644
--- a/mythtv/libs/libmythui/mythuitext.cpp
+++ b/mythtv/libs/libmythui/mythuitext.cpp
@@ -196,7 +196,7 @@ void MythUIText::SetTextFromMap(const InfoMap &map)
     if (newText.isEmpty())
         newText = GetDefaultText();
 
-    QRegExp regexp("%(([^\\|%]+)?\\||\\|(.))?(\\w+)(\\|(.+))?%");
+    QRegExp regexp("%(([^\\|%]+)?\\||\\|(.))?(\\S+)(\\|(.+))?%");
     regexp.setMinimal(true);
 
     if (!newText.isEmpty() && newText.contains(regexp))
diff --git a/mythtv/libs/libmythupnp/msocketdevice.h b/mythtv/libs/libmythupnp/msocketdevice.h
index 3e40fa7..cbee01d 100644
--- a/mythtv/libs/libmythupnp/msocketdevice.h
+++ b/mythtv/libs/libmythupnp/msocketdevice.h
@@ -121,7 +121,9 @@ public:
 
     inline qint64 readBlock(char *data, quint64 maxlen)
     {
-        return qint64(read(data, qint64(maxlen)));
+        // read() does not correctly handle zero-byte udp packets
+        // so call readData() directly which does
+        return maxlen ? qint64(read(data, qint64(maxlen))) : qint64(readData(data, qint64(maxlen)));
     }
 
     virtual quint16  port() const;
diff --git a/mythtv/libs/libmythupnp/msocketdevice_unix.cpp b/mythtv/libs/libmythupnp/msocketdevice_unix.cpp
index 5a80aa6..0741eed 100644
--- a/mythtv/libs/libmythupnp/msocketdevice_unix.cpp
+++ b/mythtv/libs/libmythupnp/msocketdevice_unix.cpp
@@ -983,8 +983,28 @@ qint64 MSocketDevice::waitForMore(int msecs, bool *timeout) const
 */
 qint64 MSocketDevice::readData(char *data, qint64 maxlen)
 {
+#if !defined(QT_NO_IPV6)
+
+    struct sockaddr_storage aa;
+#else
+
+    struct sockaddr_in aa;
+#endif
+
     if (maxlen == 0)
+    {
+        // Cannot short circuit on zero bytes for datagram because zero-
+        // byte datagrams are a real thing and if you don't issue a read
+        // then select() will keep falling through
+        if (t == Datagram)
+        {
+            QT_SOCKLEN_T sz;
+            sz = sizeof(aa);
+            ::recvfrom(fd, data, 0, 0, (struct sockaddr *) & aa, &sz);
+            qt_socket_getportaddr((struct sockaddr *)&aa, &pp, &pa);
+        }
         return 0;
+    }
 
     if (data == 0)
     {
@@ -1022,13 +1042,6 @@ qint64 MSocketDevice::readData(char *data, qint64 maxlen)
     {
         if (t == Datagram)
         {
-#if !defined(QT_NO_IPV6)
-
-            struct sockaddr_storage aa;
-#else
-
-            struct sockaddr_in aa;
-#endif
             memset(&aa, 0, sizeof(aa));
             QT_SOCKLEN_T sz;
             sz = sizeof(aa);
diff --git a/mythtv/libs/libmythupnp/ssdp.cpp b/mythtv/libs/libmythupnp/ssdp.cpp
index 9e503eb..c375f79 100644
--- a/mythtv/libs/libmythupnp/ssdp.cpp
+++ b/mythtv/libs/libmythupnp/ssdp.cpp
@@ -291,14 +291,19 @@ void SSDP::run()
 
         int count;
         count = select(nMaxSocket + 1, &read_set, NULL, NULL, &timeout);
+
         for (int nIdx = 0; count && nIdx < (int)NumberOfSockets; nIdx++ )
         {
-            if (m_Sockets[nIdx] != NULL && m_Sockets[nIdx]->socket() >= 0 &&
-                FD_ISSET(m_Sockets[nIdx]->socket(), &read_set))
+            bool cond1 = m_Sockets[nIdx] != NULL;
+            bool cond2 = cond1 && m_Sockets[nIdx]->socket() >= 0;
+            bool cond3 = cond2 && FD_ISSET(m_Sockets[nIdx]->socket(), &read_set);
+
+            if (cond3)
             {
 #if 0
                 LOG(VB_GENERAL, LOG_DEBUG, QString("FD_ISSET( %1 )").arg(nIdx));
 #endif
+
                 ProcessData(m_Sockets[nIdx]);
                 count--;
             }
@@ -315,10 +320,20 @@ void SSDP::run()
 void SSDP::ProcessData( MSocketDevice *pSocket )
 {
     QByteArray buffer;
-    long nBytes = 0;
+    long nBytes = pSocket->bytesAvailable();
     int retries = 0;
+    // Note: this function MUST do a read even if someone sends a zero byte UDP message
+    // Otherwise the select() will continue to signal data ready, so to prevent using 100%
+    // CPU, we need to call a recv function to make select() block again
+    bool didDoRead = 0;
+
+    // UDP message of zero length? OK, "recv" it and move on
+    if (nBytes == 0)
+    {
+        LOG(VB_UPNP, LOG_WARNING, QString("SSDP: Received 0 byte UDP message"));
+    }
 
-    while ((nBytes = pSocket->bytesAvailable()) > 0)
+    while ((nBytes = pSocket->bytesAvailable()) > 0 || (nBytes == 0 && !didDoRead))
     {
         buffer.resize(nBytes);
 
@@ -326,6 +341,7 @@ void SSDP::ProcessData( MSocketDevice *pSocket )
         do
         {
             long ret = pSocket->readBlock( buffer.data() + nRead, nBytes - nRead );
+            didDoRead = 1;
             if (ret < 0)
             {
                 if (errno == EAGAIN || errno == EWOULDBLOCK)
@@ -349,7 +365,7 @@ void SSDP::ProcessData( MSocketDevice *pSocket )
 
             nRead += ret;
 
-            if (0 == ret)
+            if (0 == ret && nBytes != 0)
             {
                 LOG(VB_SOCKET, LOG_WARNING,
                     QString("%1 bytes reported available, "
@@ -367,7 +383,7 @@ void SSDP::ProcessData( MSocketDevice *pSocket )
 
         QHostAddress  peerAddress = pSocket->peerAddress();
         quint16       peerPort    = pSocket->peerPort   ();
-
+        
         // ------------------------------------------------------------------
         QString     str          = QString(buffer.constData());
         QStringList lines        = str.split("\r\n", QString::SkipEmptyParts);
diff --git a/mythtv/locales/de_at.xml b/mythtv/locales/de_at.xml
new file mode 100644
index 0000000..a11af26
--- /dev/null
+++ b/mythtv/locales/de_at.xml
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<mythlocale>
+  <!-- Global Settings -->
+    <!-- EIT, Subtitle, Audio Stream Language Preferences -->
+    <setting name="ISO639Language0" global="true">ger</setting>
+    <setting name="ISO639Language1" global="true">ger</setting>
+
+    <!-- Recording -->
+    <setting name="TVFormat" global="true">PAL</setting>
+    <setting name="VbiFormat" global="true">PAL Teletext</setting>
+    <setting name="FreqTable" global="true">europe-west</setting>
+
+    <!-- Scheduling -->
+    <setting name="prefDupMethod" global="true">8</setting> <!-- Subtitle then description works best  -->
+
+    <!-- Advert Detection -->
+
+
+  <!-- Per-host Settings -->
+    <!-- Languages - Self Explanatory -->
+    <setting name="Language" global="true">de</setting>
+
+    <!-- Country -->
+    <setting name="Country" global="true">AT</setting>
+
+    <!-- Date/Time format -->
+    <setting name="DateFormat">ddd d MMM</setting>
+    <setting name="TimeFormat">h:mm</setting>
+    <setting name="ShortDateFormat">dd.MM.</setting>
+
+    <!-- Playback -->
+
+
+  <!-- Plugins -->
+    <!-- MythArchive -->
+    <setting name="MythArchiveVideoFormat">PAL</setting>
+</mythlocale>
diff --git a/mythtv/programs/mythbackend/mainserver.cpp b/mythtv/programs/mythbackend/mainserver.cpp
index 6fc25d4..8813652 100644
--- a/mythtv/programs/mythbackend/mainserver.cpp
+++ b/mythtv/programs/mythbackend/mainserver.cpp
@@ -898,6 +898,9 @@ void MainServer::ProcessRequestWork(MythSocket *sock)
 
 void MainServer::customEvent(QEvent *e)
 {
+    if (!e)
+        return;
+
     QStringList broadcast;
     QSet<QString> receivers;
 
diff --git a/mythtv/programs/mythfilldatabase/xmltvparser.cpp b/mythtv/programs/mythfilldatabase/xmltvparser.cpp
index d05649d..b843acb 100644
--- a/mythtv/programs/mythfilldatabase/xmltvparser.cpp
+++ b/mythtv/programs/mythfilldatabase/xmltvparser.cpp
@@ -359,7 +359,8 @@ ProgInfo *XMLTVParser::parseProgram(QDomElement &element)
             {
                 QDomNodeList values = info.elementsByTagName("value");
                 QDomElement item;
-                QString stars, num, den;
+                QString stars;
+                float num, den;
                 float rating = 0.0;
 
                 // Use the first rating to appear in the xml, this should be
@@ -371,14 +372,22 @@ ProgInfo *XMLTVParser::parseProgram(QDomElement &element)
                 // In the case of uk_rt it's not unknown for a recommendation
                 // to be given to programmes which are 'so bad, you have to
                 // watch!'
+                //
+                // XMLTV uses zero based ratings and signals no rating by absence.
+                // A rating from 1 to 5 is encoded as 0/4 to 4/4.
+                // MythTV uses zero to signal no rating!
+                // The same rating is encoded as 0.2 to 1.0 with steps of 0.2, it
+                // is not encoded as 0.0 to 1.0 with steps of 0.25 because
+                // 0 signals no rating!
+                // See http://xmltv.cvs.sourceforge.net/viewvc/xmltv/xmltv/xmltv.dtd?revision=1.47&view=markup#l539
                 item = values.item(0).toElement();
                 if (!item.isNull())
                 {
                     stars = getFirstText(item);
-                    num = stars.section('/', 0, 0);
-                    den = stars.section('/', 1, 1);
-                    if (0.0 < den.toFloat())
-                        rating = num.toFloat()/den.toFloat();
+                    num = stars.section('/', 0, 0).toFloat() + 1;
+                    den = stars.section('/', 1, 1).toFloat() + 1;
+                    if (0.0 < den)
+                        rating = num/den;
                 }
 
                 pginfo->stars.setNum(rating);
diff --git a/mythtv/programs/mythfrontend/globalsettings.cpp b/mythtv/programs/mythfrontend/globalsettings.cpp
index a487a49..ad99e0b 100644
--- a/mythtv/programs/mythfrontend/globalsettings.cpp
+++ b/mythtv/programs/mythfrontend/globalsettings.cpp
@@ -1604,6 +1604,18 @@ static HostCheckBox *EnableMHEG()
     return gc;
 }
 
+static HostCheckBox *EnableMHEGic()
+{
+    HostCheckBox *gc = new HostCheckBox("EnableMHEGic");
+    gc->setLabel(QObject::tr("Enable network access for interactive TV"));
+    gc->setValue(false);
+    gc->setHelpText(QObject::tr(
+                        "If enabled, interactive TV applications (MHEG) will "
+                        "be able to access interactive content over the "
+                        "internet. This is used for BBC iPlayer."));
+    return gc;
+}
+
 static HostCheckBox *PersistentBrowseMode()
 {
     HostCheckBox *gc = new HostCheckBox("PersistentBrowseMode");
@@ -4051,6 +4063,7 @@ OSDSettings::OSDSettings()
     osd->setLabel(tr("On-screen Display"));
 
     osd->addChild(EnableMHEG());
+    osd->addChild(EnableMHEGic());
     osd->addChild(PersistentBrowseMode());
     osd->addChild(BrowseAllTuners());
     osd->addChild(DefaultCCMode());
diff --git a/mythtv/programs/mythfrontend/networkcontrol.cpp b/mythtv/programs/mythfrontend/networkcontrol.cpp
index eb147ed..d71ac0d 100644
--- a/mythtv/programs/mythfrontend/networkcontrol.cpp
+++ b/mythtv/programs/mythfrontend/networkcontrol.cpp
@@ -187,6 +187,7 @@ NetworkControl::NetworkControl() :
     keyMap["f23"]                    = Qt::Key_F23;
     keyMap["f24"]                    = Qt::Key_F24;
 
+    keyTextMap[Qt::Key_Space]           = " ";
     keyTextMap[Qt::Key_Plus]            = "+";
     keyTextMap[Qt::Key_Comma]           = ",";
     keyTextMap[Qt::Key_Minus]           = "-";
diff --git a/mythtv/programs/mythfrontend/playbackbox.cpp b/mythtv/programs/mythfrontend/playbackbox.cpp
index d01293f..18ba2ac 100644
--- a/mythtv/programs/mythfrontend/playbackbox.cpp
+++ b/mythtv/programs/mythfrontend/playbackbox.cpp
@@ -280,17 +280,17 @@ static QString extract_main_state(const ProgramInfo &pginfo, const TV *player)
     return state;
 }
 
-static QString extract_job_state(const ProgramInfo &pginfo)
+QString PlaybackBox::extract_job_state(const ProgramInfo &pginfo)
 {
     QString job = "default";
 
     if (pginfo.GetRecordingStatus() == rsRecording)
         job = "recording";
-    else if (JobQueue::IsJobQueuedOrRunning(
+    else if (m_jobQueue.IsJobQueuedOrRunning(
                  JOB_TRANSCODE, pginfo.GetChanID(),
                  pginfo.GetRecordingStartTime()))
         job = "transcoding";
-    else if (JobQueue::IsJobQueuedOrRunning(
+    else if (m_jobQueue.IsJobQueuedOrRunning(
                  JOB_COMMFLAG,  pginfo.GetChanID(),
                  pginfo.GetRecordingStartTime()))
         job = "commflagging";
@@ -298,15 +298,16 @@ static QString extract_job_state(const ProgramInfo &pginfo)
     return job;
 }
 
-static QString extract_commflag_state(const ProgramInfo &pginfo)
+QString PlaybackBox::extract_commflag_state(const ProgramInfo &pginfo)
 {
     QString job = "default";
 
     // commflagged can be yes, no or processing
-    if (JobQueue::IsJobRunning(JOB_COMMFLAG, pginfo))
+    if (m_jobQueue.IsJobRunning(JOB_COMMFLAG, pginfo.GetChanID(),
+                                pginfo.GetRecordingStartTime()))
         return "running";
-    if (JobQueue::IsJobQueued(JOB_COMMFLAG, pginfo.GetChanID(),
-                              pginfo.GetRecordingStartTime()))
+    if (m_jobQueue.IsJobQueued(JOB_COMMFLAG, pginfo.GetChanID(),
+                               pginfo.GetRecordingStartTime()))
         return "queued";
 
     return (pginfo.GetProgramFlags() & FL_COMMFLAG ? "yes" : "no");
@@ -5535,4 +5536,57 @@ void HelpPopup::addItem(const QString &state, const QString &text)
     item->DisplayState(state, "icons");
 }
 
+void PlaybackBox::PbbJobQueue::Update()
+{
+    QDateTime now = QDateTime::currentDateTime();
+    if (!m_lastUpdated.isValid() ||
+        m_lastUpdated.msecsTo(now) >= kInvalidateTimeMs)
+    {
+        QMap<int, JobQueueEntry> jobs;
+        JobQueue::GetJobsInQueue(jobs, JOB_LIST_ALL);
+        m_jobs.clear();
+        for (int i = 0; i < jobs.size(); ++i)
+        {
+            JobQueueEntry &entry = jobs[i];
+            m_jobs.insert(qMakePair(entry.chanid, entry.recstartts), entry);
+        }
+        m_lastUpdated = now;
+    }
+}
+
+bool PlaybackBox::PbbJobQueue::IsJobQueued(int jobType, uint chanid,
+                                           const QDateTime &recstartts)
+{
+    Update();
+    QList<JobQueueEntry> values = m_jobs.values(qMakePair(chanid, recstartts));
+    QList<JobQueueEntry>::const_iterator iter, end = values.end();
+    for (iter = values.begin(); iter != end; ++iter)
+    {
+        if (iter->type == jobType)
+            return JobQueue::IsJobStatusQueued(iter->status);
+    }
+    return false;
+}
+
+bool PlaybackBox::PbbJobQueue::IsJobRunning(int jobType, uint chanid,
+                                            const QDateTime &recstartts)
+{
+    Update();
+    QList<JobQueueEntry> values = m_jobs.values(qMakePair(chanid, recstartts));
+    QList<JobQueueEntry>::const_iterator iter, end = values.end();
+    for (iter = values.begin(); iter != end; ++iter)
+    {
+        if (iter->type == jobType)
+            return JobQueue::IsJobStatusRunning(iter->status);
+    }
+    return false;
+}
+
+bool PlaybackBox::PbbJobQueue::IsJobQueuedOrRunning(int jobType, uint chanid,
+                                                    const QDateTime &recstartts)
+{
+    return IsJobQueued(jobType, chanid, recstartts) ||
+        IsJobRunning(jobType, chanid, recstartts);
+}
+
 /* vim: set expandtab tabstop=4 shiftwidth=4: */
diff --git a/mythtv/programs/mythfrontend/playbackbox.h b/mythtv/programs/mythfrontend/playbackbox.h
index 836c433..444ab75 100644
--- a/mythtv/programs/mythfrontend/playbackbox.h
+++ b/mythtv/programs/mythfrontend/playbackbox.h
@@ -13,6 +13,7 @@ using namespace std;
 
 #include <QStringList>
 #include <QDateTime>
+#include <QMultiMap>
 #include <QObject>
 #include <QMutex>
 #include <QMap>
@@ -336,6 +337,9 @@ class PlaybackBox : public ScheduleCommon
 
     QString CreateProgramInfoString(const ProgramInfo &program) const;
 
+    QString extract_job_state(const ProgramInfo &pginfo);
+    QString extract_commflag_state(const ProgramInfo &pginfo);
+
 
     QRegExp m_prefixes;   ///< prefixes to be ignored when sorting
     QRegExp m_titleChaff; ///< stuff to remove for search rules
@@ -444,6 +448,29 @@ class PlaybackBox : public ScheduleCommon
     bool                m_usingGroupSelector;
     bool                m_groupSelected;
     bool                m_passwordEntered;
+
+    // This class caches the contents of the jobqueue table to avoid excessive
+    // DB queries each time the PBB selection changes (currently 4 queries per
+    // displayed item).  The cache remains valid for 15 seconds
+    // (kInvalidateTimeMs).
+    class PbbJobQueue
+    {
+    public:
+        PbbJobQueue() { Update(); }
+        bool IsJobQueued(int jobType, uint chanid,
+                         const QDateTime &recstartts);
+        bool IsJobRunning(int jobType, uint chanid,
+                          const QDateTime &recstartts);
+        bool IsJobQueuedOrRunning(int jobType, uint chanid,
+                                  const QDateTime &recstartts);
+    private:
+        static const qint64 kInvalidateTimeMs = 15000;
+        void Update();
+        QDateTime m_lastUpdated;
+        // Maps <chanid, recstartts> to a set of JobQueueEntry values.
+        typedef QMultiMap<QPair<uint, QDateTime>, JobQueueEntry> MapType;
+        MapType m_jobs;
+    } m_jobQueue;
 };
 
 class GroupSelector : public MythScreenType
diff --git a/mythtv/programs/mythfrontend/programrecpriority.cpp b/mythtv/programs/mythfrontend/programrecpriority.cpp
index 22e561a..ea6914b 100644
--- a/mythtv/programs/mythfrontend/programrecpriority.cpp
+++ b/mythtv/programs/mythfrontend/programrecpriority.cpp
@@ -1483,25 +1483,20 @@ void ProgramRecPriority::UpdateList()
         item->SetText(tempTime, "lastrecordedtime", state);
 
         QString channame = progInfo->channame;
-        if ((progInfo->recType == kAllRecord) ||
-            (progInfo->recType == kOneRecord) ||
-            (progInfo->recType == kDailyRecord) ||
-            (progInfo->recType == kWeeklyRecord))
-            channame = tr("Any");
-        item->SetText(channame, "channel", state);
         QString channum = progInfo->chanstr;
-        if ((progInfo->recType == kAllRecord) ||
-            (progInfo->recType == kOneRecord) ||
-            (progInfo->recType == kDailyRecord) ||
-            (progInfo->recType == kWeeklyRecord))
-            channum = tr("Any");
-        item->SetText(channum, "channum", state);
         QString callsign = progInfo->chansign;
-        if ((progInfo->recType == kAllRecord) ||
-            (progInfo->recType == kOneRecord) ||
-            (progInfo->recType == kDailyRecord) ||
-            (progInfo->recType == kWeeklyRecord))
+        if (progInfo->recType != kSingleRecord &&
+            progInfo->recType != kOverrideRecord &&
+            progInfo->recType != kDontRecord &&
+            !(progInfo->GetRecordingRule()->m_filter & 1024) &&
+            progInfo->GetRecordingRule()->m_searchType != kManualSearch)
+        {
+            channame = tr("Any");
+            channum = tr("Any");
             callsign = tr("Any");
+        }
+        item->SetText(channame, "channel", state);
+        item->SetText(channum, "channum", state);
         item->SetText(callsign, "callsign", state);
 
         QString profile = progInfo->profile;
@@ -1600,37 +1595,27 @@ void ProgramRecPriority::updateInfo(MythUIButtonListItem *item)
         m_lastRecordedTimeText->SetText(tempTime);
     }
 
-    if (m_channameText)
+    if (m_channameText || m_channumText || m_callsignText)
     {
         QString channame = pgRecInfo->channame;
-        if ((pgRecInfo->rectype == kAllRecord) ||
-            (pgRecInfo->rectype == kOneRecord) ||
-            (pgRecInfo->rectype == kDailyRecord) ||
-            (pgRecInfo->rectype == kWeeklyRecord))
-            channame = tr("Any");
-        m_channameText->SetText(channame);
-    }
-
-    if (m_channumText)
-    {
         QString channum = pgRecInfo->chanstr;
-        if ((pgRecInfo->rectype == kAllRecord) ||
-            (pgRecInfo->rectype == kOneRecord) ||
-            (pgRecInfo->rectype == kDailyRecord) ||
-            (pgRecInfo->rectype == kWeeklyRecord))
-            channum = tr("Any");
-        m_channumText->SetText(channum);
-    }
-
-    if (m_callsignText)
-    {
         QString callsign = pgRecInfo->chansign;
-        if ((pgRecInfo->rectype == kAllRecord) ||
-            (pgRecInfo->rectype == kOneRecord) ||
-            (pgRecInfo->rectype == kDailyRecord) ||
-            (pgRecInfo->rectype == kWeeklyRecord))
+        if (pgRecInfo->recType != kSingleRecord &&
+            pgRecInfo->recType != kOverrideRecord &&
+            pgRecInfo->recType != kDontRecord &&
+            !(pgRecInfo->GetRecordingRule()->m_filter & 1024) &&
+            pgRecInfo->GetRecordingRule()->m_searchType != kManualSearch)
+        {
+            channame = tr("Any");
+            channum = tr("Any");
             callsign = tr("Any");
-        m_callsignText->SetText(callsign);
+        }
+        if (m_channameText)
+            m_channameText->SetText(channame);
+        if (m_channumText)
+            m_channumText->SetText(channum);
+        if (m_callsignText)
+            m_callsignText->SetText(callsign);
     }
 
     if (m_recProfileText)
diff --git a/mythtv/programs/mythfrontend/themechooser.cpp b/mythtv/programs/mythfrontend/themechooser.cpp
index a14beb0..b5950bc 100644
--- a/mythtv/programs/mythfrontend/themechooser.cpp
+++ b/mythtv/programs/mythfrontend/themechooser.cpp
@@ -1027,7 +1027,17 @@ ThemeUpdateChecker::ThemeUpdateChecker(void) :
     gCoreContext->SaveSetting("ThemeUpdateStatus", "");
 
     connect(m_updateTimer, SIGNAL(timeout()), SLOT(checkForUpdate()));
-    m_updateTimer->start(60 * 60 * 1000); // Run once an hour
+
+    if (getenv("MYTHTV_DEBUGMDM"))
+    {
+        LOG(VB_GENERAL, LOG_INFO, "Checking for theme updates every minute");
+        m_updateTimer->start(60 * 1000); // Run once a minute
+    }
+    else
+    {
+        LOG(VB_GENERAL, LOG_INFO, "Checking for theme updates every hour");
+        m_updateTimer->start(60 * 60 * 1000); // Run once an hour
+    }
 
     // Run once 15 seconds from now
     QTimer::singleShot(15 * 1000, this, SLOT(checkForUpdate()));
diff --git a/mythtv/programs/mythtranscode/transcode.cpp b/mythtv/programs/mythtranscode/transcode.cpp
index 343834b..50f9e22 100644
--- a/mythtv/programs/mythtranscode/transcode.cpp
+++ b/mythtv/programs/mythtranscode/transcode.cpp
@@ -267,7 +267,7 @@ int Transcode::TranscodeFile(const QString &inputname,
         return REENCODE_ERROR;
     }
     player_ctx->SetRingBuffer(rb);
-    player_ctx->SetPlayer(new MythPlayer(kVideoIsNull));
+    player_ctx->SetPlayer(new MythPlayer((PlayerFlags)(kVideoIsNull | kNoITV)));
     SetPlayerContext(player_ctx);
     GetPlayer()->SetPlayerInfo(NULL, NULL, GetPlayerContext());
     if (m_proginfo->GetRecordingEndTime() > curtime)
diff --git a/mythtv/programs/mythtv-setup/importicons.cpp b/mythtv/programs/mythtv-setup/importicons.cpp
index 6cceb04..ec8e506 100644
--- a/mythtv/programs/mythtv-setup/importicons.cpp
+++ b/mythtv/programs/mythtv-setup/importicons.cpp
@@ -165,8 +165,8 @@ void ImportIconsWizard::enableControls(dialogState state, bool selectEnabled)
 void ImportIconsWizard::manualSearch()
 {
     QString str = m_manualEdit->GetText();
-    if (!search(escape_csv(str)))
-        m_statusText->SetText(tr("No matches found for %1") .arg(str));
+    if (!search(str))
+        m_statusText->SetText(tr("No matches found for \"%1\"").arg(str));
     else
         m_statusText->Reset();
 }
@@ -476,7 +476,7 @@ bool ImportIconsWizard::doLoad()
     m_nameText->SetText(tr("Choose icon for channel %1")
                         .arg((*m_missingIter).strName));
     m_manualEdit->SetText((*m_missingIter).strName);
-    if (!search((*m_missingIter).strNameCSV))
+    if (!search((*m_missingIter).strName))
         m_statusText->SetText(tr("No matches found for %1")
                               .arg((*m_missingIter).strName));
     else
diff --git a/mythtv/programs/mythwelcome/welcomedialog.cpp b/mythtv/programs/mythwelcome/welcomedialog.cpp
index 5b88219..fec68ef 100644
--- a/mythtv/programs/mythwelcome/welcomedialog.cpp
+++ b/mythtv/programs/mythwelcome/welcomedialog.cpp
@@ -107,7 +107,7 @@ void WelcomeDialog::startFrontend(void)
     QString startFECmd = gCoreContext->GetSetting("MythWelcomeStartFECmd",
                          m_installDir + "/bin/mythfrontend");
 
-    myth_system(startFECmd, kMSDisableUDPListener);
+    myth_system(startFECmd, kMSDisableUDPListener | kMSProcessEvents);
     updateAll();
     m_frontendIsRunning = false;
 }
diff --git a/mythtv/themes/default/keyboard/el.xml b/mythtv/themes/default/keyboard/el.xml
new file mode 100644
index 0000000..da192cf
--- /dev/null
+++ b/mythtv/themes/default/keyboard/el.xml
@@ -0,0 +1,270 @@
+<keydefinitions>
+
+    <!-- key definitions 
+        name  - should match one of the keys defined in keyboard.xml
+
+        type  - char      add shown char to edit
+                - shift     toggle shift state
+                - done      close popup keyboard
+                - moveleft  move cursor left
+                - moveright move cursor right
+                - lock      lock shift on 
+                - del       delete char to right
+                - back      delete char to left
+                - alt       show alternate layout
+
+        char  - the char to show on the key in the four modes
+                can be any char or a hex char code like 0x1234
+
+        move  - key to move to in the up/down/left/right directions
+    -->
+
+    <!-- top row -->
+    <key name="key_1" type="char">
+        <char normal="1" shift="!" alt="1" altshift="!"></char>
+        <move left="key_`" right="key_2" up="key_lshift" down="key_q"></move>
+    </key>
+    <key name="key_2" type="char">
+        <char normal="2" shift="@" alt="2" altshift="@"></char>
+        <move left="key_1" right="key_3" up="key_lshift" down="key_w"></move>
+    </key>
+    <key name="key_3" type="char">
+        <char normal="3" shift="#" alt="3" altshift="#"></char>
+        <move left="key_2" right="key_4" up="key_lock" down="key_e"></move>
+    </key>
+    <key name="key_4" type="char">
+        <char normal="4" shift="$" alt="4" altshift="$"></char>
+        <move left="key_3" right="key_5" up="key_lock" down="key_r"></move>
+    </key>
+    <key name="key_5" type="char">
+        <char normal="5" shift="%" alt="5" altshift="%"></char>
+        <move left="key_4" right="key_6" up="key_lock" down="key_t"></move>
+    </key>
+    <key name="key_6" type="char">
+        <char normal="6" shift="^" alt="6" altshift="^"></char>
+        <move left="key_5" right="key_7" up="key_space" down="key_y"></move>
+    </key>
+    <key name="key_7" type="char">
+        <char normal="7" shift="0x0026" alt="7" altshift="0x0026"></char>
+        <move left="key_6" right="key_8" up="key_space" down="key_u"></move>
+    </key>
+    <key name="key_8" type="char">
+        <char normal="8" shift="*" alt="8" altshift="*"></char>
+        <move left="key_7" right="key_9" up="key_alt" down="key_i"></move>
+    </key>
+    <key name="key_9" type="char">
+        <char normal="9" shift="(" alt="9" altshift="("></char>
+        <move left="key_8" right="key_0" up="key_alt" down="key_o"></move>
+    </key>
+    <key name="key_0" type="char">
+        <char normal="0" shift=")" alt="0" altshift=")"></char>
+        <move left="key_9" right="key_-" up="key_moveleft" down="key_p"></move>
+    </key>
+    <key name="key_-" type="char">
+        <char normal="-" shift="_" alt="-" altshift="_"></char>
+        <move left="key_0" right="key_=" up="key_moveright" down="key_["></move>
+    </key>
+    <key name="key_=" type="char">
+        <char normal="=" shift="+" alt="=" altshift="+"></char>
+        <move left="key_-" right="key_#" up="key_moveright" down="key_]"></move>
+    </key>
+    <key name="key_#" type="char">
+        <char normal="\" shift="|" alt="\" altshift="|"></char>
+        <move left="key_=" right="key_`" up="key_rshift" down="key_back"></move>
+    </key>
+    <key name="key_`" type="char">
+        <char normal="`" shift="~" alt="`" altshift="~"></char>
+        <move left="key_#" right="key_1" up="key_rshift" down="key_back"></move>
+    </key>
+
+    <!-- row 2 -->
+    <key name="key_q" type="char">
+        <char normal=";" shift=":" alt="q" altshift="Q"></char>
+        <move left="key_back" right="key_w" up="key_1" down="key_a"></move>
+    </key>
+    <key name="key_w" type="char">
+        <char normal="ς" shift="" alt="w" altshift="W"></char>
+        <move left="key_q" right="key_e" up="key_2" down="key_s"></move>
+    </key>
+    <key name="key_e" type="char">
+        <char normal="ε" shift="Ε" alt="e" altshift="έ"></char>
+        <move left="key_w" right="key_r" up="key_3" down="key_d"></move>
+    </key>
+    <key name="key_r" type="char">
+        <char normal="ρ" shift="Ρ" alt="r" altshift="ΰ"></char>
+        <move left="key_e" right="key_t" up="key_4" down="key_f"></move>
+    </key>
+    <key name="key_t" type="char">
+        <char normal="τ" shift="Τ" alt="t" altshift="ϋ"></char>
+        <move left="key_r" right="key_y" up="key_5" down="key_g"></move>
+    </key>
+    <key name="key_y" type="char">
+        <char normal="υ" shift="Υ" alt="y" altshift="ΐ"></char>
+        <move left="key_t" right="key_u" up="key_6" down="key_h"></move>
+    </key>
+    <key name="key_u" type="char">
+        <char normal="θ" shift="Θ" alt="u" altshift="ϊ"></char>
+        <move left="key_y" right="key_i" up="key_7" down="key_j"></move>
+    </key>
+    <key name="key_i" type="char">
+        <char normal="ι" shift="Ι" alt="i" altshift="ί"></char>
+        <move left="key_u" right="key_o" up="key_8" down="key_k"></move>
+    </key>
+    <key name="key_o" type="char">
+        <char normal="ο" shift="Ο" alt="o" altshift="ό"></char>
+        <move left="key_i" right="key_p" up="key_9" down="key_l"></move>
+    </key>
+    <key name="key_p" type="char">
+        <char normal="π" shift="Π" alt="p" altshift="P"></char>
+        <move left="key_o" right="key_[" up="key_0" down="key_;"></move>
+    </key>
+    <key name="key_[" type="char">
+        <char normal="[" shift="{" alt="[" altshift="{"></char>
+        <move left="key_p" right="key_]" up="key_-" down="key_'"></move>
+    </key>
+    <key name="key_]" type="char">
+        <char normal="]" shift="}" alt="]" altshift="}"></char>
+        <move left="key_[" right="key_back" up="key_=" down="key_'"></move>
+    </key>
+
+    <!-- row 3 -->
+    <key name="key_a" type="char">
+        <char normal="α" shift="Α" alt="a" altshift="ά"></char>
+        <move left="key_done" right="key_s" up="key_q" down="key_z"></move>
+    </key>
+    <key name="key_s" type="char">
+        <char normal="σ" shift="Σ" alt="s" altshift="S"></char>
+        <move left="key_a" right="key_d" up="key_w" down="key_x"></move>
+    </key>
+    <key name="key_d" type="char">
+        <char normal="δ" shift="Δ" alt="d" altshift="D"></char>
+        <move left="key_s" right="key_f" up="key_e" down="key_c"></move>
+    </key>
+    <key name="key_f" type="char">
+        <char normal="φ" shift="Φ" alt="f" altshift="F"></char>
+        <move left="key_d" right="key_g" up="key_r" down="key_v"></move>
+    </key>
+    <key name="key_g" type="char">
+        <char normal="γ" shift="Γ" alt="g" altshift="G"></char>
+        <move left="key_f" right="key_h" up="key_t" down="key_b"></move>
+    </key>
+    <key name="key_h" type="char">
+        <char normal="η" shift="Η" alt="h" altshift="ή"></char>
+        <move left="key_g" right="key_j" up="key_y" down="key_n"></move>
+    </key>
+    <key name="key_j" type="char">
+        <char normal="ξ" shift="Ξ" alt="j" altshift="J"></char>
+        <move left="key_h" right="key_k" up="key_u" down="key_m"></move>
+    </key>
+    <key name="key_k" type="char">
+        <char normal="κ" shift="Κ" alt="k" altshift="K"></char>
+        <move left="key_j" right="key_l" up="key_i" down="key_,"></move>
+    </key>
+    <key name="key_l" type="char">
+        <char normal="λ" shift="λ" alt="l" altshift="L"></char>
+        <move left="key_k" right="key_;" up="key_o" down="key_."></move>
+    </key>
+    <key name="key_;" type="char">
+        <char normal=";" shift=":" alt=";" altshift=":"></char>
+        <move left="key_l" right="key_'" up="key_p" down="key_/"></move>
+    </key>
+    <key name="key_'" type="char">
+        <char normal="'" shift="0x0022" alt="'" altshift="0x0022"></char>
+        <move left="key_;" right="key_done" up="key_[" down="key_comp"></move>
+    </key>
+
+    <!-- row 4 -->
+    <key name="key_\" type="char">
+        <char normal="0x0024" shift="0x00ac" alt="0x00a3" altshift="0x00ac"></char>
+        <move left="key_del" right="key_z" up="key_a" down="key_lshift"></move>
+    </key>
+    <key name="key_z" type="char">
+        <char normal="ζ" shift="Ζ" alt="z" altshift="Z"></char>
+        <move left="key_\" right="key_x" up="key_a" down="key_lshift"></move>
+    </key>
+    <key name="key_x" type="char">
+        <char normal="χ" shift="Χ" alt="x" altshift="X"></char>
+        <move left="key_z" right="key_c" up="key_s" down="key_lock"></move>
+    </key>
+    <key name="key_c" type="char">
+        <char normal="ψ" shift="Ψ" alt="c" altshift="C"></char>
+        <move left="key_x" right="key_v" up="key_d" down="key_lock"></move>
+    </key>
+    <key name="key_v" type="char">
+        <char normal="ω" shift="Ω" alt="v" altshift="ώ"></char>
+        <move left="key_c" right="key_b" up="key_f" down="key_lock"></move>
+    </key>
+    <key name="key_b" type="char">
+        <char normal="β" shift="Β" alt="b" altshift="B"></char>
+        <move left="key_v" right="key_n" up="key_g" down="key_space"></move>
+    </key>
+    <key name="key_n" type="char">
+        <char normal="ν" shift="Ν" alt="n" altshift="N"></char>
+        <move left="key_b" right="key_m" up="key_h" down="key_space"></move>
+    </key>
+    <key name="key_m" type="char">
+        <char normal="μ" shift="Μ" alt="m" altshift="M"></char>
+        <move left="key_n" right="key_," up="key_j" down="key_alt"></move>
+    </key>
+    <key name="key_," type="char">
+        <char normal="," shift="0x003c" alt="," altshift="0x003c"></char>
+        <move left="key_m" right="key_." up="key_k" down="key_alt"></move>
+    </key>
+    <key name="key_." type="char">
+        <char normal="." shift=">" alt="." altshift=">"></char>
+        <move left="key_," right="key_/" up="key_l" down="key_moveleft"></move>
+    </key>
+    <key name="key_/" type="char">
+        <char normal="/" shift="?" alt="/" altshift="?"></char>
+        <move left="key_." right="key_comp" up="key_;" down="key_moveleft"></move>
+    </key>
+
+    <!-- row 5 -->
+    <key name="key_space" type="char">
+        <char normal=" " shift=" " alt=" " altshift=" "></char>
+        <move left="key_lock" right="key_alt" up="key_n" down="key_7"></move>
+    </key>
+
+    <!-- special keys -->
+    <key name="key_lshift" type="shift">
+        <char normal="" shift="" alt="" altshift=""></char>
+        <move left="key_rshift" right="key_lock" up="key_\" down="key_1"></move>
+    </key>
+    <key name="key_lock" type="lock">
+        <char normal="Lock" shift="Lock" alt="Lock" altshift="Lock"></char>
+        <move left="key_lshift" right="key_space" up="key_x" down="key_4"></move>
+    </key>
+    <key name="key_moveleft" type="moveleft">
+        <char normal="" shift="" alt="" altshift=""></char>
+        <move left="key_alt" right="key_moveright" up="key_/" down="key_0"></move>
+    </key>
+    <key name="key_moveright" type="moveright">
+        <char normal="" shift="" alt="" altshift=""></char>
+        <move left="key_moveleft" right="key_rshift" up="key_comp" down="key_="></move>
+    </key>
+    <key name="key_rshift" type="shift">
+        <char normal="" shift="" alt="" altshift=""></char>
+        <move left="key_moveright" right="key_lshift" up="key_del" down="key_`"></move>
+    </key>
+    <key name="key_back" type="back">
+        <char normal="Back" shift="Back" alt="Back" altshift="Back"></char>
+        <move left="key_]" right="key_q" up="key_`" down="key_done"></move>
+    </key>
+    <key name="key_comp" type="comp">
+        <char normal="Comp" shift="Comp" alt="Comp" altshift="Comp"></char>
+        <move left="key_/" right="key_del" up="key_'" down="key_moveright"></move>
+    </key>
+    <key name="key_del" type="del">
+        <char normal="Del" shift="Del" alt="Del" altshift="Del"></char>
+        <move left="key_comp" right="key_\" up="key_done" down="key_rshift"></move>
+    </key>
+    <key name="key_done" type="done">
+        <char normal="" shift="" alt="" altshift=""></char>
+        <move left="key_'" right="key_a" up="key_back" down="key_del"></move>
+    </key>
+    <key name="key_alt" type="alt">
+        <char normal="AltGr" shift="AltGr" alt="AltGr" altshift="AltGr"></char>
+        <move left="key_space" right="key_moveleft" up="key_," down="key_9"></move>
+    </key>
+
+</keydefinitions>
diff --git a/mythtv/themes/default/keyboard/el_ui.xml b/mythtv/themes/default/keyboard/el_ui.xml
new file mode 100644
index 0000000..59621cb
--- /dev/null
+++ b/mythtv/themes/default/keyboard/el_ui.xml
@@ -0,0 +1,410 @@
+<mythuitheme>
+
+  <window name="keyboard">
+
+    <font name="normal" face="Arial">
+      <color>#ffffff</color>
+      <size>14</size>
+      <bold>yes</bold>
+    </font>
+
+    <font name="focused" face="Arial">
+      <color>#ffffff</color>
+      <size>14</size>
+      <bold>yes</bold>
+    </font>
+
+    <font name="down" face="Arial">
+      <color>#ffffff</color>
+      <size>14</size>
+      <bold>yes</bold>
+    </font>
+
+    <font name="downfocused" face="Arial">
+      <color>#ffffff</color>
+      <size>14</size>
+      <bold>yes</bold>
+    </font>
+
+    <container name="keyboard_container">
+      <area>0,0,537,193</area>
+
+      <keyboard name="keyboard" draworder="2">
+        <area>0,0,537,193</area>
+        <context>-1</context>
+
+        <!-- these are the default key images to use if non 
+             are specified in the key definition -->
+        <image function="normal" filename="keyboard/key_normal.png"></image>
+        <image function="focused" filename="keyboard/key_focused.png"></image>
+        <image function="down" filename="keyboard/key_down.png"></image> 
+        <image function="downfocused" filename="keyboard/key_downfocused.png"></image>
+
+        <!-- these are the default fonts to use if non 
+             are specified in the key definition -->
+        <fcnfont name="normal" function="normal"></fcnfont>
+        <fcnfont name="focused" function="focused"></fcnfont>
+        <fcnfont name="down" function="down"></fcnfont>
+        <fcnfont name="downfocused" function="downfocused"></fcnfont>
+
+        <!-- key definitions 
+            type  - char      add shown char to edit
+                  - shift     toggle shift state
+                  - done      close popup keyboard
+                  - moveleft  move cursor left
+                  - moveright move cursor right
+                  - lock      lock shift on 
+                  - del       delete char to right
+                  - back      delete char to left
+                  - alt       show alternate layout
+
+            char  - the char to show on the key in the four modes
+                    can be any char or a hex char code like 0xXXXX
+
+            move  - key to move to in the up/down/left/right directions
+        -->
+
+        <!-- top row -->
+        <key name="key1" type="char" draworder="1">
+          <position>5,5</position>
+          <char normal="1" shift="!" alt="1" altshift="!"></char>
+          <move left="key14" right="key2" up="key49" down="key15"></move>
+        </key>
+        <key name="key2" type="char" draworder="1">
+          <position>42,5</position>
+          <char normal="2" shift="@" alt="2" altshift="@"></char>
+          <move left="key1" right="key3" up="key49" down="key16"></move>
+        </key>
+        <key name="key3" type="char" draworder="1">
+          <position>79,5</position>
+          <char normal="3" shift="#" alt="3" altshift="#"></char>
+          <move left="key2" right="key4" up="key50" down="key17"></move>
+        </key>
+        <key name="key4" type="char" draworder="1">
+          <position>116,5</position>
+          <char normal="4" shift="$" alt="4" altshift="$"></char>
+          <move left="key3" right="key5" up="key50" down="key18"></move>
+        </key>
+        <key name="key5" type="char" draworder="1">
+          <position>153,5</position>
+          <char normal="5" shift="%" alt="5" altshift="%"></char>
+          <move left="key4" right="key6" up="key48" down="key19"></move>
+        </key>
+        <key name="key6" type="char" draworder="1">
+          <position>190,5</position>
+          <char normal="6" shift="^" alt="6" altshift="^"></char>
+          <move left="key5" right="key7" up="key48" down="key20"></move>
+        </key>
+        <key name="key7" type="char" draworder="1">
+          <position>227,5</position>
+          <char normal="7" shift="0x0026" alt="2" altshift="0x0026"></char>
+          <move left="key6" right="key8" up="key48" down="key21"></move>
+        </key>
+        <key name="key8" type="char" draworder="1">
+          <position>264,5</position>
+          <char normal="8" shift="*" alt="8" altshift="*"></char>
+          <move left="key7" right="key9" up="key48" down="key22"></move>
+        </key>
+        <key name="key9" type="char" draworder="1">
+          <position>301,5</position>
+          <char normal="9" shift="(" alt="9" altshift="("></char>
+          <move left="key8" right="key10" up="key48" down="key23"></move>
+        </key>
+        <key name="key10" type="char" draworder="1">
+          <position>338,5</position>
+          <char normal="0" shift=")" alt="0" altshift=")"></char>
+          <move left="key9" right="key11" up="key51" down="key24"></move>
+        </key>
+        <key name="key11" type="char" draworder="1">
+          <position>375,5</position>
+          <char normal="-" shift="_" alt="-" altshift="_"></char>
+          <move left="key10" right="key12" up="key52" down="key25"></move>
+        </key>
+        <key name="key12" type="char" draworder="1">
+          <position>412,5</position>
+          <char normal="=" shift="+" alt="=" altshift="+"></char>
+          <move left="key11" right="key13" up="key52" down="key26"></move>
+        </key>
+        <key name="key13" type="char" draworder="1">
+          <position>449,5</position>
+          <char normal="\" shift="|" alt="\" altshift="|"></char>
+          <move left="key12" right="key14" up="key53" down="key55"></move>
+        </key>
+        <key name="key14" type="char" draworder="1">
+          <position>486,5</position>
+          <char normal="`" shift="~" alt="`" altshift="~"></char>
+          <move left="key13" right="key1" up="key53" down="key54"></move>
+        </key>
+
+        <!-- row 2 -->
+        <key name="key15" type="char" draworder="1">
+          <position>16,42</position>
+          <char normal=";" shift=":" alt="q" altshift="Q"></char>
+          <move left="key54" right="key16" up="key1" down="key27"></move>
+        </key>
+        <key name="key16" type="char" draworder="1">
+          <position>53,42</position>
+          <char normal="ς" shift="" alt="w" altshift="W"></char>
+          <move left="key15" right="key17" up="key2" down="key28"></move>
+        </key>
+        <key name="key17" type="char" draworder="1">
+          <position>90,42</position>
+          <char normal="ε" shift="Ε" alt="e" altshift="έ"></char>
+          <move left="key16" right="key18" up="key3" down="key29"></move>
+        </key>
+        <key name="key18" type="char" draworder="1">
+          <position>127,42</position>
+          <char normal="ρ" shift="Ρ" alt="r" altshift="ΰ"></char>
+          <move left="key17" right="key19" up="key4" down="key30"></move>
+        </key>
+        <key name="key19" type="char" draworder="1">
+          <position>164,42</position>
+          <char normal="τ" shift="Τ" alt="t" altshift="ϋ"></char>
+          <move left="key18" right="key20" up="key5" down="key31"></move>
+        </key>
+        <key name="key20" type="char" draworder="1">
+          <position>201,42</position>
+          <char normal="υ" shift="Υ" alt="y" altshift="ΐ"></char>
+          <move left="key19" right="key21" up="key6" down="key32"></move>
+        </key>
+        <key name="key21" type="char" draworder="1">
+          <position>238,42</position>
+          <char normal="θ" shift="Θ" alt="u" altshift="ϊ"></char>
+          <move left="key20" right="key22" up="key7" down="key33"></move>
+        </key>
+        <key name="key22" type="char" draworder="1">
+          <position>275,42</position>
+          <char normal="ι" shift="Ι" alt="i" altshift="ί"></char>
+          <move left="key21" right="key23" up="key8" down="key34"></move>
+        </key>
+        <key name="key23" type="char" draworder="1">
+          <position>312,42</position>
+          <char normal="ο" shift="Ο" alt="o" altshift="ό"></char>
+          <move left="key22" right="key24" up="key9" down="key35"></move>
+        </key>
+        <key name="key24" type="char" draworder="1">
+          <position>349,42</position>
+          <char normal="π" shift="Π" alt="p" altshift="P"></char>
+          <move left="key23" right="key25" up="key10" down="key36"></move>
+        </key>
+        <key name="key25" type="char" draworder="1">
+          <position>386,42</position>
+          <char normal="[" shift="{" alt="[" altshift="{"></char>
+          <move left="key24" right="key26" up="key11" down="key37"></move>
+        </key>
+        <key name="key26" type="char" draworder="1">
+          <position>423,42</position>
+          <char normal="]" shift="}" alt="]" altshift="}"></char>
+          <move left="key25" right="key54" up="key12" down="key57"></move>
+        </key>
+
+        <!-- row 3 -->
+        <key name="key27" type="char" draworder="1">
+          <position>28,79</position>
+          <char normal="α" shift="Α" alt="a" altshift="ά"></char>
+          <move left="key57" right="key28" up="key15" down="key38"></move>
+        </key>
+        <key name="key28" type="char" draworder="1">
+          <position>65,79</position>
+          <char normal="σ" shift="Σ" alt="s" altshift="S"></char>
+          <move left="key27" right="key29" up="key16" down="key39"></move>
+        </key>
+        <key name="key29" type="char" draworder="1">
+          <position>102,79</position>
+          <char normal="δ" shift="Δ" alt="d" altshift="D"></char>
+          <move left="key28" right="key30" up="key17" down="key40"></move>
+        </key>
+        <key name="key30" type="char" draworder="1">
+          <position>139,79</position>
+          <char normal="φ" shift="Φ" alt="f" altshift="F"></char>
+          <move left="key29" right="key31" up="key18" down="key41"></move>
+        </key>
+        <key name="key31" type="char" draworder="1">
+          <position>176,79</position>
+          <char normal="γ" shift="Γ" alt="g" altshift="G"></char>
+          <move left="key30" right="key32" up="key19" down="key42"></move>
+        </key>
+        <key name="key32" type="char" draworder="1">
+          <position>213,79</position>
+          <char normal="η" shift="Η" alt="h" altshift="ή"></char>
+          <move left="key31" right="key33" up="key20" down="key43"></move>
+        </key>
+        <key name="key33" type="char" draworder="1">
+          <position>250,79</position>
+          <char normal="ξ" shift="Ξ" alt="j" altshift="J"></char>
+          <move left="key32" right="key34" up="key21" down="key44"></move>
+        </key>
+        <key name="key34" type="char" draworder="1">
+          <position>287,79</position>
+          <char normal="κ" shift="Κ" alt="k" altshift="K"></char>
+          <move left="key33" right="key35" up="key22" down="key45"></move>
+        </key>
+        <key name="key35" type="char" draworder="1">
+          <position>324,79</position>
+          <char normal="λ" shift="Λ" alt="l" altshift="L"></char>
+          <move left="key34" right="key36" up="key23" down="key46"></move>
+        </key>
+        <key name="key36" type="char" draworder="1">
+          <position>361,79</position>
+          <char normal="" shift="" alt=";" altshift=":"></char>
+          <move left="key35" right="key37" up="key24" down="key47"></move>
+        </key>
+        <key name="key37" type="char" draworder="1">
+          <position>398,79</position>
+          <char normal="'" shift="0x0022" alt="'" altshift="0x0022"></char>
+          <move left="key36" right="key57" up="key25" down="key55"></move>
+        </key>
+
+        <!-- row 4 -->
+        <key name="key38" type="char" draworder="1">
+          <position>42,116</position>
+          <char normal="ζ" shift="Ζ" alt="z" altshift="Z"></char>
+          <move left="key56" right="key39" up="key27" down="key49"></move>
+        </key>
+        <key name="key39" type="char" draworder="1">
+          <position>79,116</position>
+          <char normal="χ" shift="Χ" alt="x" altshift="X"></char>
+          <move left="key38" right="key40" up="key28" down="key50"></move>
+        </key>
+        <key name="key40" type="char" draworder="1">
+          <position>116,116</position>
+          <char normal="ψ" shift="Ψ" alt="c" altshift="C"></char>
+          <move left="key39" right="key41" up="key29" down="key50"></move>
+        </key>
+        <key name="key41" type="char" draworder="1">
+          <position>153,116</position>
+          <char normal="ω" shift="Ω" alt="v" altshift="ώ"></char>
+          <move left="key40" right="key42" up="key30" down="key50"></move>
+        </key>
+        <key name="key42" type="char" draworder="1">
+          <position>190,116</position>
+          <char normal="β" shift="Β" alt="b" altshift="B"></char>
+          <move left="key41" right="key43" up="key31" down="key48"></move>
+        </key>
+        <key name="key43" type="char" draworder="1">
+          <position>227,116</position>
+          <char normal="ν" shift="Ν" alt="n" altshift="N"></char>
+          <move left="key42" right="key44" up="key32" down="key48"></move>
+        </key>
+        <key name="key44" type="char" draworder="1">
+          <position>264,116</position>
+          <char normal="μ" shift="Μ" alt="m" altshift="M"></char>
+          <move left="key43" right="key45" up="key33" down="key48"></move>
+        </key>
+        <key name="key45" type="char" draworder="1">
+          <position>301,116</position>
+          <char normal="," shift="0x003c" alt="," altshift="0x003c"></char>
+          <move left="key44" right="key46" up="key34" down="key48"></move>
+        </key>
+        <key name="key46" type="char" draworder="1">
+          <position>338,116</position>
+          <char normal="." shift=">" alt="." altshift=">"></char>
+          <move left="key45" right="key47" up="key35" down="key51"></move>
+        </key>
+        <key name="key47" type="char" draworder="1">
+          <position>375,116</position>
+          <char normal="/" shift="?" alt="/" altshift="?"></char>
+          <move left="key46" right="key55" up="key36" down="key51"></move>
+        </key>
+
+        <!-- row 5 -->
+        <key name="key48" type="char" draworder="1">
+          <position>205,153</position>
+          <char normal=" " shift=" " alt=" " altshift=" "></char>
+          <move left="key50" right="key51" up="key43" down="key7"></move>
+          <image function="normal" filename="keyboard/key_normal_space.png"></image>
+          <image function="focused" filename="keyboard/key_focused_space.png"></image>
+          <image function="down" filename="keyboard/key_down_space.png"></image>
+          <image function="downfocused" filename="keyboard/key_downfocused_space.png"></image>
+        </key>
+
+        <!-- special keys -->
+        <key name="key49" type="shift" draworder="1">
+          <position>5,153</position>
+          <char normal="Shift" shift="Shift" alt="Shift" altshift="Shift"></char>
+          <move left="key53" right="key50" up="key38" down="key1"></move>
+          <image function="normal" filename="keyboard/key_normal_shift.png"></image>
+          <image function="focused" filename="keyboard/key_focused_shift.png"></image>
+          <image function="down" filename="keyboard/key_down_shift.png"></image>
+          <image function="downfocused" filename="keyboard/key_downfocused_shift.png"></image>
+        </key>
+        <key name="key50" type="lock" draworder="1">
+          <position>85,153</position>
+          <char normal="Lock" shift="Lock" alt="Lock" altshift="Lock"></char>
+          <move left="key49" right="key48" up="key40" down="key4"></move>
+          <image function="normal" filename="keyboard/key_normal_shift.png"></image>
+          <image function="focused" filename="keyboard/key_focused_shift.png"></image>
+          <image function="down" filename="keyboard/key_down_shift.png"></image>
+          <image function="downfocused" filename="keyboard/key_downfocused_shift.png"></image>
+        </key>
+        <key name="key51" type="moveleft" draworder="1">
+          <position>350,153</position>
+          <char normal="0x003c-" shift="0x003c-" alt="0x003c-" altshift="0x003c-"></char>
+          <move left="key48" right="key52" up="key47" down="key10"></move>
+          <image function="normal" filename="keyboard/key_normal_move.png"></image>
+          <image function="focused" filename="keyboard/key_focused_move.png"></image>
+          <image function="down" filename="keyboard/key_down_move.png"></image>
+          <image function="downfocused" filename="keyboard/key_downfocused_move.png"></image>
+        </key>
+        <key name="key52" type="moveright" draworder="1">
+          <position>405,153</position>
+          <char normal="->" shift="->" alt="->" altshift="->"></char>
+          <move left="key51" right="key53" up="key55" down="key12"></move>
+          <image function="normal" filename="keyboard/key_normal_move.png"></image>
+          <image function="focused" filename="keyboard/key_focused_move.png"></image>
+          <image function="down" filename="keyboard/key_down_move.png"></image>
+          <image function="downfocused" filename="keyboard/key_downfocused_move.png"></image>
+        </key>
+        <key name="key53" type="shift" draworder="1">
+          <position>460,153</position>
+          <char normal="Shift" shift="Shift" alt="Shift" altshift="Shift"></char>
+          <move left="key52" right="key49" up="key56" down="key14"></move>
+          <image function="normal" filename="keyboard/key_normal_back.png"></image>
+          <image function="focused" filename="keyboard/key_focused_back.png"></image>
+          <image function="down" filename="keyboard/key_down_back.png"></image>
+          <image function="downfocused" filename="keyboard/key_downfocused_back.png"></image>
+        </key>
+        <key name="key54" type="back" draworder="1">
+          <position>460,42</position>
+          <char normal="Back" shift="Back" alt="Back" altshift="Back"></char>
+          <move left="key26" right="key15" up="key14" down="key57"></move>
+          <image function="normal" filename="keyboard/key_normal_back.png"></image>
+          <image function="focused" filename="keyboard/key_focused_back.png"></image>
+          <image function="down" filename="keyboard/key_down_back.png"></image>
+          <image function="downfocused" filename="keyboard/key_downfocused_back.png"></image>
+        </key>
+        <key name="key55" type="comp" draworder="1">
+          <position>412,116</position>
+          <char normal="Comp" shift="Comp" alt="Comp" altshift="Comp"></char>
+          <move left="key47" right="key56" up="key37" down="key52"></move>
+          <image function="normal" filename="keyboard/key_normal_back.png"></image>
+          <image function="focused" filename="keyboard/key_focused_back.png"></image>
+          <image function="down" filename="keyboard/key_down_back.png"></image>
+          <image function="downfocused" filename="keyboard/key_downfocused_back.png"></image>
+        </key>
+        <key name="key56" type="del" draworder="1">
+          <position>486,116</position>
+          <char normal="Del" shift="Del" alt="Del" altshift="Del"></char>
+          <move left="key55" right="key38" up="key57" down="key53"></move>
+          <image function="normal" filename="keyboard/key_normal_del.png"></image>
+          <image function="focused" filename="keyboard/key_focused_del.png"></image>
+          <image function="down" filename="keyboard/key_down_del.png"></image>
+          <image function="downfocused" filename="keyboard/key_downfocused_del.png"></image>
+        </key>
+        <key name="key57" type="done" draworder="1">
+          <position>435,79</position>
+          <char normal="Done" shift="Done" alt="Done" altshift="Done"></char>
+          <move left="key37" right="key27" up="key54" down="key56"></move>
+          <image function="normal" filename="keyboard/key_normal_done.png"></image>
+          <image function="focused" filename="keyboard/key_focused_done.png"></image>
+          <image function="down" filename="keyboard/key_down_done.png"></image>
+          <image function="downfocused" filename="keyboard/key_downfocused_done.png"></image>
+        </key>
+
+      </keyboard>
+
+    </container>
+
+  </window>
+
+</mythuitheme>
